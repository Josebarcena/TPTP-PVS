// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "TPTPVS.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • S $end\l"]
  0 -> 1 [style=solid label="THF"]
  0 -> 2 [style=solid label="INCLUDE_HEADER"]
  0 -> 3 [style=solid label="DIV"]
  0 -> 4 [style=solid label="MULTIBLOCK"]
  0 -> 5 [style=dashed label="S"]
  0 -> 6 [style=dashed label="tptp_file"]
  0 -> 7 [style=dashed label="tptp_input"]
  0 -> 8 [style=dashed label="comments"]
  0 -> 9 [style=dashed label="annotated_formula"]
  0 -> 10 [style=dashed label="thf_annotated"]
  1 [label="State 1\n\l 11 thf_annotated: THF • OPAREN FUNCTOR COMMA type COMMA thf_formula CPAREN DOT\l 12              | THF • OPAREN NUMBER COMMA type COMMA thf_formula CPAREN DOT\l"]
  1 -> 11 [style=solid label="OPAREN"]
  2 [label="State 2\n\l  5 tptp_input: INCLUDE_HEADER • OPAREN include_file CPAREN DOT\l"]
  2 -> 12 [style=solid label="OPAREN"]
  3 [label="State 3\n\l  8 comments: DIV •\l"]
  3 -> "3R8" [style=solid]
 "3R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  9 comments: MULTIBLOCK •\l"]
  4 -> "4R9" [style=solid]
 "4R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  0 $accept: S • $end\l"]
  5 -> 13 [style=solid label="$end"]
  6 [label="State 6\n\l  1 S: tptp_file •\l"]
  6 -> "6R1" [style=solid]
 "6R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  2 tptp_file: tptp_input • tptp_file\l  3          | tptp_input •\l"]
  7 -> 1 [style=solid label="THF"]
  7 -> 2 [style=solid label="INCLUDE_HEADER"]
  7 -> 3 [style=solid label="DIV"]
  7 -> 4 [style=solid label="MULTIBLOCK"]
  7 -> 14 [style=dashed label="tptp_file"]
  7 -> 7 [style=dashed label="tptp_input"]
  7 -> 8 [style=dashed label="comments"]
  7 -> 9 [style=dashed label="annotated_formula"]
  7 -> 10 [style=dashed label="thf_annotated"]
  7 -> "7R3" [style=solid]
 "7R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  6 tptp_input: comments •\l"]
  8 -> "8R6" [style=solid]
 "8R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  4 tptp_input: annotated_formula •\l"]
  9 -> "9R4" [style=solid]
 "9R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 10 annotated_formula: thf_annotated •\l"]
  10 -> "10R10" [style=solid]
 "10R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 11 thf_annotated: THF OPAREN • FUNCTOR COMMA type COMMA thf_formula CPAREN DOT\l 12              | THF OPAREN • NUMBER COMMA type COMMA thf_formula CPAREN DOT\l"]
  11 -> 15 [style=solid label="FUNCTOR"]
  11 -> 16 [style=solid label="NUMBER"]
  12 [label="State 12\n\l  5 tptp_input: INCLUDE_HEADER OPAREN • include_file CPAREN DOT\l"]
  12 -> 17 [style=solid label="INCLUDE_FILE"]
  12 -> 18 [style=dashed label="include_file"]
  13 [label="State 13\n\l  0 $accept: S $end •\l"]
  13 -> "13R0" [style=solid]
 "13R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  14 [label="State 14\n\l  2 tptp_file: tptp_input tptp_file •\l"]
  14 -> "14R2" [style=solid]
 "14R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 11 thf_annotated: THF OPAREN FUNCTOR • COMMA type COMMA thf_formula CPAREN DOT\l"]
  15 -> 19 [style=solid label="COMMA"]
  16 [label="State 16\n\l 12 thf_annotated: THF OPAREN NUMBER • COMMA type COMMA thf_formula CPAREN DOT\l"]
  16 -> 20 [style=solid label="COMMA"]
  17 [label="State 17\n\l  7 include_file: INCLUDE_FILE •\l"]
  17 -> "17R7" [style=solid]
 "17R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  5 tptp_input: INCLUDE_HEADER OPAREN include_file • CPAREN DOT\l"]
  18 -> 21 [style=solid label="CPAREN"]
  19 [label="State 19\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA • type COMMA thf_formula CPAREN DOT\l"]
  19 -> 22 [style=solid label="AXIOM"]
  19 -> 23 [style=solid label="HYPOTHESIS"]
  19 -> 24 [style=solid label="DEFINITION"]
  19 -> 25 [style=solid label="LEMMA"]
  19 -> 26 [style=solid label="THEOREM"]
  19 -> 27 [style=solid label="CONJECTURE"]
  19 -> 28 [style=solid label="NEGATEDCONJ"]
  19 -> 29 [style=solid label="TYPE"]
  19 -> 30 [style=solid label="ASSUMPTION"]
  19 -> 31 [style=solid label="PLAIN"]
  19 -> 32 [style=solid label="UNKNOWN"]
  19 -> 33 [style=dashed label="type"]
  20 [label="State 20\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA • type COMMA thf_formula CPAREN DOT\l"]
  20 -> 22 [style=solid label="AXIOM"]
  20 -> 23 [style=solid label="HYPOTHESIS"]
  20 -> 24 [style=solid label="DEFINITION"]
  20 -> 25 [style=solid label="LEMMA"]
  20 -> 26 [style=solid label="THEOREM"]
  20 -> 27 [style=solid label="CONJECTURE"]
  20 -> 28 [style=solid label="NEGATEDCONJ"]
  20 -> 29 [style=solid label="TYPE"]
  20 -> 30 [style=solid label="ASSUMPTION"]
  20 -> 31 [style=solid label="PLAIN"]
  20 -> 32 [style=solid label="UNKNOWN"]
  20 -> 34 [style=dashed label="type"]
  21 [label="State 21\n\l  5 tptp_input: INCLUDE_HEADER OPAREN include_file CPAREN • DOT\l"]
  21 -> 35 [style=solid label="DOT"]
  22 [label="State 22\n\l 13 type: AXIOM •\l"]
  22 -> "22R13" [style=solid]
 "22R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l 14 type: HYPOTHESIS •\l"]
  23 -> "23R14" [style=solid]
 "23R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 15 type: DEFINITION •\l"]
  24 -> "24R15" [style=solid]
 "24R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 16 type: LEMMA •\l"]
  25 -> "25R16" [style=solid]
 "25R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 17 type: THEOREM •\l"]
  26 -> "26R17" [style=solid]
 "26R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 18 type: CONJECTURE •\l"]
  27 -> "27R18" [style=solid]
 "27R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 19 type: NEGATEDCONJ •\l"]
  28 -> "28R19" [style=solid]
 "28R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l 20 type: TYPE •\l"]
  29 -> "29R20" [style=solid]
 "29R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 21 type: ASSUMPTION •\l"]
  30 -> "30R21" [style=solid]
 "30R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 22 type: PLAIN •\l"]
  31 -> "31R22" [style=solid]
 "31R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l 23 type: UNKNOWN •\l"]
  32 -> "32R23" [style=solid]
 "32R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA type • COMMA thf_formula CPAREN DOT\l"]
  33 -> 36 [style=solid label="COMMA"]
  34 [label="State 34\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA type • COMMA thf_formula CPAREN DOT\l"]
  34 -> 37 [style=solid label="COMMA"]
  35 [label="State 35\n\l  5 tptp_input: INCLUDE_HEADER OPAREN include_file CPAREN DOT •\l"]
  35 -> "35R5" [style=solid]
 "35R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA type COMMA • thf_formula CPAREN DOT\l"]
  36 -> 38 [style=solid label="OPAREN"]
  36 -> 39 [style=solid label="OBRA"]
  36 -> 40 [style=solid label="OKEY"]
  36 -> 41 [style=solid label="EQUAL_COMB"]
  36 -> 42 [style=solid label="DESCRIPTION_COMB"]
  36 -> 43 [style=solid label="CHOICE_COMB"]
  36 -> 44 [style=solid label="EXISTS_COMB"]
  36 -> 45 [style=solid label="FORALL_COMB"]
  36 -> 46 [style=solid label="DESCRIPTION"]
  36 -> 47 [style=solid label="CHOICE"]
  36 -> 48 [style=solid label="LAMBDA"]
  36 -> 49 [style=solid label="EXISTS"]
  36 -> 50 [style=solid label="FORALL"]
  36 -> 51 [style=solid label="VLINE"]
  36 -> 52 [style=solid label="AND"]
  36 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  36 -> 54 [style=solid label="ASSIGNMENT"]
  36 -> 55 [style=solid label="IMPLIES"]
  36 -> 56 [style=solid label="IFF"]
  36 -> 57 [style=solid label="INFIX_EQUALITY"]
  36 -> 58 [style=solid label="INFIX_INEQUALITY"]
  36 -> 59 [style=solid label="NIFF"]
  36 -> 60 [style=solid label="NOR"]
  36 -> 61 [style=solid label="NAND"]
  36 -> 62 [style=solid label="TYPED_EXISTS"]
  36 -> 63 [style=solid label="TYPED_FORALL"]
  36 -> 64 [style=solid label="LET"]
  36 -> 65 [style=solid label="DOLLAR_COND"]
  36 -> 66 [style=solid label="VAR"]
  36 -> 67 [style=solid label="DOLLAR_WORD"]
  36 -> 68 [style=solid label="FUNCTOR"]
  36 -> 69 [style=solid label="DISTINCT_OBJECT"]
  36 -> 70 [style=solid label="NUMBER"]
  36 -> 71 [style=dashed label="thf_formula"]
  36 -> 72 [style=dashed label="thf_logic_formula"]
  36 -> 73 [style=dashed label="thf_binary_formula"]
  36 -> 74 [style=dashed label="thf_binary_pair"]
  36 -> 75 [style=dashed label="thf_binary_tuple"]
  36 -> 76 [style=dashed label="thf_or_formula"]
  36 -> 77 [style=dashed label="thf_and_formula"]
  36 -> 78 [style=dashed label="thf_apply_formula"]
  36 -> 79 [style=dashed label="thf_unitary_formula"]
  36 -> 80 [style=dashed label="thf_quantified_formula"]
  36 -> 81 [style=dashed label="thf_quantification"]
  36 -> 82 [style=dashed label="thf_unary_formula"]
  36 -> 83 [style=dashed label="thf_atom"]
  36 -> 84 [style=dashed label="thf_function"]
  36 -> 85 [style=dashed label="thf_conn_term"]
  36 -> 86 [style=dashed label="thf_conditional"]
  36 -> 87 [style=dashed label="thf_let"]
  36 -> 88 [style=dashed label="thf_type_formula"]
  36 -> 89 [style=dashed label="thf_typeable_formula"]
  36 -> 90 [style=dashed label="thf_subtype"]
  36 -> 91 [style=dashed label="thf_unitary_type"]
  36 -> 92 [style=dashed label="thf_binary_type"]
  36 -> 93 [style=dashed label="thf_mapping_type"]
  36 -> 94 [style=dashed label="thf_xprod_type"]
  36 -> 95 [style=dashed label="thf_union_type"]
  36 -> 96 [style=dashed label="thf_sequent"]
  36 -> 97 [style=dashed label="thf_tuple"]
  36 -> 98 [style=dashed label="thf_quantifier"]
  36 -> 99 [style=dashed label="fof_quantifier"]
  36 -> 100 [style=dashed label="th0_quantifier"]
  36 -> 101 [style=dashed label="th1_quantifier"]
  36 -> 102 [style=dashed label="thf_pair_connective"]
  36 -> 103 [style=dashed label="thf_unary_connective"]
  36 -> 104 [style=dashed label="th1_unary_connective"]
  36 -> 105 [style=dashed label="atom"]
  36 -> 106 [style=dashed label="untyped_atom"]
  36 -> 107 [style=dashed label="constant"]
  36 -> 108 [style=dashed label="defined_term"]
  36 -> 109 [style=dashed label="binary_connective"]
  36 -> 110 [style=dashed label="assoc_connective"]
  37 [label="State 37\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA type COMMA • thf_formula CPAREN DOT\l"]
  37 -> 38 [style=solid label="OPAREN"]
  37 -> 39 [style=solid label="OBRA"]
  37 -> 40 [style=solid label="OKEY"]
  37 -> 41 [style=solid label="EQUAL_COMB"]
  37 -> 42 [style=solid label="DESCRIPTION_COMB"]
  37 -> 43 [style=solid label="CHOICE_COMB"]
  37 -> 44 [style=solid label="EXISTS_COMB"]
  37 -> 45 [style=solid label="FORALL_COMB"]
  37 -> 46 [style=solid label="DESCRIPTION"]
  37 -> 47 [style=solid label="CHOICE"]
  37 -> 48 [style=solid label="LAMBDA"]
  37 -> 49 [style=solid label="EXISTS"]
  37 -> 50 [style=solid label="FORALL"]
  37 -> 51 [style=solid label="VLINE"]
  37 -> 52 [style=solid label="AND"]
  37 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  37 -> 54 [style=solid label="ASSIGNMENT"]
  37 -> 55 [style=solid label="IMPLIES"]
  37 -> 56 [style=solid label="IFF"]
  37 -> 57 [style=solid label="INFIX_EQUALITY"]
  37 -> 58 [style=solid label="INFIX_INEQUALITY"]
  37 -> 59 [style=solid label="NIFF"]
  37 -> 60 [style=solid label="NOR"]
  37 -> 61 [style=solid label="NAND"]
  37 -> 62 [style=solid label="TYPED_EXISTS"]
  37 -> 63 [style=solid label="TYPED_FORALL"]
  37 -> 64 [style=solid label="LET"]
  37 -> 65 [style=solid label="DOLLAR_COND"]
  37 -> 66 [style=solid label="VAR"]
  37 -> 67 [style=solid label="DOLLAR_WORD"]
  37 -> 68 [style=solid label="FUNCTOR"]
  37 -> 69 [style=solid label="DISTINCT_OBJECT"]
  37 -> 70 [style=solid label="NUMBER"]
  37 -> 111 [style=dashed label="thf_formula"]
  37 -> 72 [style=dashed label="thf_logic_formula"]
  37 -> 73 [style=dashed label="thf_binary_formula"]
  37 -> 74 [style=dashed label="thf_binary_pair"]
  37 -> 75 [style=dashed label="thf_binary_tuple"]
  37 -> 76 [style=dashed label="thf_or_formula"]
  37 -> 77 [style=dashed label="thf_and_formula"]
  37 -> 78 [style=dashed label="thf_apply_formula"]
  37 -> 79 [style=dashed label="thf_unitary_formula"]
  37 -> 80 [style=dashed label="thf_quantified_formula"]
  37 -> 81 [style=dashed label="thf_quantification"]
  37 -> 82 [style=dashed label="thf_unary_formula"]
  37 -> 83 [style=dashed label="thf_atom"]
  37 -> 84 [style=dashed label="thf_function"]
  37 -> 85 [style=dashed label="thf_conn_term"]
  37 -> 86 [style=dashed label="thf_conditional"]
  37 -> 87 [style=dashed label="thf_let"]
  37 -> 88 [style=dashed label="thf_type_formula"]
  37 -> 89 [style=dashed label="thf_typeable_formula"]
  37 -> 90 [style=dashed label="thf_subtype"]
  37 -> 91 [style=dashed label="thf_unitary_type"]
  37 -> 92 [style=dashed label="thf_binary_type"]
  37 -> 93 [style=dashed label="thf_mapping_type"]
  37 -> 94 [style=dashed label="thf_xprod_type"]
  37 -> 95 [style=dashed label="thf_union_type"]
  37 -> 96 [style=dashed label="thf_sequent"]
  37 -> 97 [style=dashed label="thf_tuple"]
  37 -> 98 [style=dashed label="thf_quantifier"]
  37 -> 99 [style=dashed label="fof_quantifier"]
  37 -> 100 [style=dashed label="th0_quantifier"]
  37 -> 101 [style=dashed label="th1_quantifier"]
  37 -> 102 [style=dashed label="thf_pair_connective"]
  37 -> 103 [style=dashed label="thf_unary_connective"]
  37 -> 104 [style=dashed label="th1_unary_connective"]
  37 -> 105 [style=dashed label="atom"]
  37 -> 106 [style=dashed label="untyped_atom"]
  37 -> 107 [style=dashed label="constant"]
  37 -> 108 [style=dashed label="defined_term"]
  37 -> 109 [style=dashed label="binary_connective"]
  37 -> 110 [style=dashed label="assoc_connective"]
  38 [label="State 38\n\l 49 thf_unitary_formula: OPAREN • thf_logic_formula CPAREN\l 74 thf_typeable_formula: OPAREN • thf_logic_formula CPAREN\l 91 thf_sequent: OPAREN • thf_sequent CPAREN\l"]
  38 -> 38 [style=solid label="OPAREN"]
  38 -> 39 [style=solid label="OBRA"]
  38 -> 40 [style=solid label="OKEY"]
  38 -> 41 [style=solid label="EQUAL_COMB"]
  38 -> 42 [style=solid label="DESCRIPTION_COMB"]
  38 -> 43 [style=solid label="CHOICE_COMB"]
  38 -> 44 [style=solid label="EXISTS_COMB"]
  38 -> 45 [style=solid label="FORALL_COMB"]
  38 -> 46 [style=solid label="DESCRIPTION"]
  38 -> 47 [style=solid label="CHOICE"]
  38 -> 48 [style=solid label="LAMBDA"]
  38 -> 49 [style=solid label="EXISTS"]
  38 -> 50 [style=solid label="FORALL"]
  38 -> 51 [style=solid label="VLINE"]
  38 -> 52 [style=solid label="AND"]
  38 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  38 -> 54 [style=solid label="ASSIGNMENT"]
  38 -> 55 [style=solid label="IMPLIES"]
  38 -> 56 [style=solid label="IFF"]
  38 -> 57 [style=solid label="INFIX_EQUALITY"]
  38 -> 58 [style=solid label="INFIX_INEQUALITY"]
  38 -> 59 [style=solid label="NIFF"]
  38 -> 60 [style=solid label="NOR"]
  38 -> 61 [style=solid label="NAND"]
  38 -> 62 [style=solid label="TYPED_EXISTS"]
  38 -> 63 [style=solid label="TYPED_FORALL"]
  38 -> 64 [style=solid label="LET"]
  38 -> 65 [style=solid label="DOLLAR_COND"]
  38 -> 66 [style=solid label="VAR"]
  38 -> 67 [style=solid label="DOLLAR_WORD"]
  38 -> 68 [style=solid label="FUNCTOR"]
  38 -> 69 [style=solid label="DISTINCT_OBJECT"]
  38 -> 70 [style=solid label="NUMBER"]
  38 -> 112 [style=dashed label="thf_logic_formula"]
  38 -> 73 [style=dashed label="thf_binary_formula"]
  38 -> 74 [style=dashed label="thf_binary_pair"]
  38 -> 75 [style=dashed label="thf_binary_tuple"]
  38 -> 76 [style=dashed label="thf_or_formula"]
  38 -> 77 [style=dashed label="thf_and_formula"]
  38 -> 78 [style=dashed label="thf_apply_formula"]
  38 -> 79 [style=dashed label="thf_unitary_formula"]
  38 -> 80 [style=dashed label="thf_quantified_formula"]
  38 -> 81 [style=dashed label="thf_quantification"]
  38 -> 82 [style=dashed label="thf_unary_formula"]
  38 -> 83 [style=dashed label="thf_atom"]
  38 -> 84 [style=dashed label="thf_function"]
  38 -> 85 [style=dashed label="thf_conn_term"]
  38 -> 86 [style=dashed label="thf_conditional"]
  38 -> 87 [style=dashed label="thf_let"]
  38 -> 88 [style=dashed label="thf_type_formula"]
  38 -> 89 [style=dashed label="thf_typeable_formula"]
  38 -> 90 [style=dashed label="thf_subtype"]
  38 -> 91 [style=dashed label="thf_unitary_type"]
  38 -> 92 [style=dashed label="thf_binary_type"]
  38 -> 93 [style=dashed label="thf_mapping_type"]
  38 -> 94 [style=dashed label="thf_xprod_type"]
  38 -> 95 [style=dashed label="thf_union_type"]
  38 -> 113 [style=dashed label="thf_sequent"]
  38 -> 97 [style=dashed label="thf_tuple"]
  38 -> 98 [style=dashed label="thf_quantifier"]
  38 -> 99 [style=dashed label="fof_quantifier"]
  38 -> 100 [style=dashed label="th0_quantifier"]
  38 -> 101 [style=dashed label="th1_quantifier"]
  38 -> 102 [style=dashed label="thf_pair_connective"]
  38 -> 103 [style=dashed label="thf_unary_connective"]
  38 -> 104 [style=dashed label="th1_unary_connective"]
  38 -> 105 [style=dashed label="atom"]
  38 -> 106 [style=dashed label="untyped_atom"]
  38 -> 107 [style=dashed label="constant"]
  38 -> 108 [style=dashed label="defined_term"]
  38 -> 109 [style=dashed label="binary_connective"]
  38 -> 110 [style=dashed label="assoc_connective"]
  39 [label="State 39\n\l 92 thf_tuple: OBRA • CBRA\l 93          | OBRA • thf_formula_list CBRA\l"]
  39 -> 114 [style=solid label="OPAREN"]
  39 -> 39 [style=solid label="OBRA"]
  39 -> 115 [style=solid label="CBRA"]
  39 -> 40 [style=solid label="OKEY"]
  39 -> 41 [style=solid label="EQUAL_COMB"]
  39 -> 42 [style=solid label="DESCRIPTION_COMB"]
  39 -> 43 [style=solid label="CHOICE_COMB"]
  39 -> 44 [style=solid label="EXISTS_COMB"]
  39 -> 45 [style=solid label="FORALL_COMB"]
  39 -> 46 [style=solid label="DESCRIPTION"]
  39 -> 47 [style=solid label="CHOICE"]
  39 -> 48 [style=solid label="LAMBDA"]
  39 -> 49 [style=solid label="EXISTS"]
  39 -> 50 [style=solid label="FORALL"]
  39 -> 51 [style=solid label="VLINE"]
  39 -> 52 [style=solid label="AND"]
  39 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  39 -> 54 [style=solid label="ASSIGNMENT"]
  39 -> 55 [style=solid label="IMPLIES"]
  39 -> 56 [style=solid label="IFF"]
  39 -> 57 [style=solid label="INFIX_EQUALITY"]
  39 -> 58 [style=solid label="INFIX_INEQUALITY"]
  39 -> 59 [style=solid label="NIFF"]
  39 -> 60 [style=solid label="NOR"]
  39 -> 61 [style=solid label="NAND"]
  39 -> 62 [style=solid label="TYPED_EXISTS"]
  39 -> 63 [style=solid label="TYPED_FORALL"]
  39 -> 64 [style=solid label="LET"]
  39 -> 65 [style=solid label="DOLLAR_COND"]
  39 -> 66 [style=solid label="VAR"]
  39 -> 67 [style=solid label="DOLLAR_WORD"]
  39 -> 68 [style=solid label="FUNCTOR"]
  39 -> 69 [style=solid label="DISTINCT_OBJECT"]
  39 -> 70 [style=solid label="NUMBER"]
  39 -> 116 [style=dashed label="thf_logic_formula"]
  39 -> 73 [style=dashed label="thf_binary_formula"]
  39 -> 74 [style=dashed label="thf_binary_pair"]
  39 -> 75 [style=dashed label="thf_binary_tuple"]
  39 -> 76 [style=dashed label="thf_or_formula"]
  39 -> 77 [style=dashed label="thf_and_formula"]
  39 -> 78 [style=dashed label="thf_apply_formula"]
  39 -> 79 [style=dashed label="thf_unitary_formula"]
  39 -> 80 [style=dashed label="thf_quantified_formula"]
  39 -> 81 [style=dashed label="thf_quantification"]
  39 -> 82 [style=dashed label="thf_unary_formula"]
  39 -> 83 [style=dashed label="thf_atom"]
  39 -> 84 [style=dashed label="thf_function"]
  39 -> 85 [style=dashed label="thf_conn_term"]
  39 -> 86 [style=dashed label="thf_conditional"]
  39 -> 87 [style=dashed label="thf_let"]
  39 -> 88 [style=dashed label="thf_type_formula"]
  39 -> 89 [style=dashed label="thf_typeable_formula"]
  39 -> 90 [style=dashed label="thf_subtype"]
  39 -> 91 [style=dashed label="thf_unitary_type"]
  39 -> 92 [style=dashed label="thf_binary_type"]
  39 -> 93 [style=dashed label="thf_mapping_type"]
  39 -> 94 [style=dashed label="thf_xprod_type"]
  39 -> 95 [style=dashed label="thf_union_type"]
  39 -> 117 [style=dashed label="thf_tuple"]
  39 -> 118 [style=dashed label="thf_formula_list"]
  39 -> 98 [style=dashed label="thf_quantifier"]
  39 -> 99 [style=dashed label="fof_quantifier"]
  39 -> 100 [style=dashed label="th0_quantifier"]
  39 -> 101 [style=dashed label="th1_quantifier"]
  39 -> 102 [style=dashed label="thf_pair_connective"]
  39 -> 103 [style=dashed label="thf_unary_connective"]
  39 -> 104 [style=dashed label="th1_unary_connective"]
  39 -> 105 [style=dashed label="atom"]
  39 -> 106 [style=dashed label="untyped_atom"]
  39 -> 107 [style=dashed label="constant"]
  39 -> 108 [style=dashed label="defined_term"]
  39 -> 109 [style=dashed label="binary_connective"]
  39 -> 110 [style=dashed label="assoc_connective"]
  40 [label="State 40\n\l 94 thf_tuple: OKEY • CKEY\l 95          | OKEY • thf_formula_list CKEY\l"]
  40 -> 114 [style=solid label="OPAREN"]
  40 -> 39 [style=solid label="OBRA"]
  40 -> 40 [style=solid label="OKEY"]
  40 -> 119 [style=solid label="CKEY"]
  40 -> 41 [style=solid label="EQUAL_COMB"]
  40 -> 42 [style=solid label="DESCRIPTION_COMB"]
  40 -> 43 [style=solid label="CHOICE_COMB"]
  40 -> 44 [style=solid label="EXISTS_COMB"]
  40 -> 45 [style=solid label="FORALL_COMB"]
  40 -> 46 [style=solid label="DESCRIPTION"]
  40 -> 47 [style=solid label="CHOICE"]
  40 -> 48 [style=solid label="LAMBDA"]
  40 -> 49 [style=solid label="EXISTS"]
  40 -> 50 [style=solid label="FORALL"]
  40 -> 51 [style=solid label="VLINE"]
  40 -> 52 [style=solid label="AND"]
  40 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  40 -> 54 [style=solid label="ASSIGNMENT"]
  40 -> 55 [style=solid label="IMPLIES"]
  40 -> 56 [style=solid label="IFF"]
  40 -> 57 [style=solid label="INFIX_EQUALITY"]
  40 -> 58 [style=solid label="INFIX_INEQUALITY"]
  40 -> 59 [style=solid label="NIFF"]
  40 -> 60 [style=solid label="NOR"]
  40 -> 61 [style=solid label="NAND"]
  40 -> 62 [style=solid label="TYPED_EXISTS"]
  40 -> 63 [style=solid label="TYPED_FORALL"]
  40 -> 64 [style=solid label="LET"]
  40 -> 65 [style=solid label="DOLLAR_COND"]
  40 -> 66 [style=solid label="VAR"]
  40 -> 67 [style=solid label="DOLLAR_WORD"]
  40 -> 68 [style=solid label="FUNCTOR"]
  40 -> 69 [style=solid label="DISTINCT_OBJECT"]
  40 -> 70 [style=solid label="NUMBER"]
  40 -> 116 [style=dashed label="thf_logic_formula"]
  40 -> 73 [style=dashed label="thf_binary_formula"]
  40 -> 74 [style=dashed label="thf_binary_pair"]
  40 -> 75 [style=dashed label="thf_binary_tuple"]
  40 -> 76 [style=dashed label="thf_or_formula"]
  40 -> 77 [style=dashed label="thf_and_formula"]
  40 -> 78 [style=dashed label="thf_apply_formula"]
  40 -> 79 [style=dashed label="thf_unitary_formula"]
  40 -> 80 [style=dashed label="thf_quantified_formula"]
  40 -> 81 [style=dashed label="thf_quantification"]
  40 -> 82 [style=dashed label="thf_unary_formula"]
  40 -> 83 [style=dashed label="thf_atom"]
  40 -> 84 [style=dashed label="thf_function"]
  40 -> 85 [style=dashed label="thf_conn_term"]
  40 -> 86 [style=dashed label="thf_conditional"]
  40 -> 87 [style=dashed label="thf_let"]
  40 -> 88 [style=dashed label="thf_type_formula"]
  40 -> 89 [style=dashed label="thf_typeable_formula"]
  40 -> 90 [style=dashed label="thf_subtype"]
  40 -> 91 [style=dashed label="thf_unitary_type"]
  40 -> 92 [style=dashed label="thf_binary_type"]
  40 -> 93 [style=dashed label="thf_mapping_type"]
  40 -> 94 [style=dashed label="thf_xprod_type"]
  40 -> 95 [style=dashed label="thf_union_type"]
  40 -> 117 [style=dashed label="thf_tuple"]
  40 -> 120 [style=dashed label="thf_formula_list"]
  40 -> 98 [style=dashed label="thf_quantifier"]
  40 -> 99 [style=dashed label="fof_quantifier"]
  40 -> 100 [style=dashed label="th0_quantifier"]
  40 -> 101 [style=dashed label="th1_quantifier"]
  40 -> 102 [style=dashed label="thf_pair_connective"]
  40 -> 103 [style=dashed label="thf_unary_connective"]
  40 -> 104 [style=dashed label="th1_unary_connective"]
  40 -> 105 [style=dashed label="atom"]
  40 -> 106 [style=dashed label="untyped_atom"]
  40 -> 107 [style=dashed label="constant"]
  40 -> 108 [style=dashed label="defined_term"]
  40 -> 109 [style=dashed label="binary_connective"]
  40 -> 110 [style=dashed label="assoc_connective"]
  41 [label="State 41\n\l118 th1_unary_connective: EQUAL_COMB •\l"]
  41 -> "41R118" [style=solid]
 "41R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l117 th1_unary_connective: DESCRIPTION_COMB •\l"]
  42 -> "42R117" [style=solid]
 "42R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l116 th1_unary_connective: CHOICE_COMB •\l"]
  43 -> "43R116" [style=solid]
 "43R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l115 th1_unary_connective: EXISTS_COMB •\l"]
  44 -> "44R115" [style=solid]
 "44R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l114 th1_unary_connective: FORALL_COMB •\l"]
  45 -> "45R114" [style=solid]
 "45R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l105 th0_quantifier: DESCRIPTION •\l"]
  46 -> "46R105" [style=solid]
 "46R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l104 th0_quantifier: CHOICE •\l"]
  47 -> "47R104" [style=solid]
 "47R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l103 th0_quantifier: LAMBDA •\l"]
  48 -> "48R103" [style=solid]
 "48R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l102 fof_quantifier: EXISTS •\l"]
  49 -> "49R102" [style=solid]
 "49R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l101 fof_quantifier: FORALL •\l"]
  50 -> "50R101" [style=solid]
 "50R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l130 assoc_connective: VLINE •\l"]
  51 -> "51R130" [style=solid]
 "51R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l131 assoc_connective: AND •\l"]
  52 -> "52R131" [style=solid]
 "52R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l112 thf_unary_connective: UNARY_CONNECTIVE •\l"]
  53 -> "53R112" [style=solid]
 "53R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l111 thf_pair_connective: ASSIGNMENT •\l"]
  54 -> "54R111" [style=solid]
 "54R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l126 binary_connective: IMPLIES •\l"]
  55 -> "55R126" [style=solid]
 "55R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l125 binary_connective: IFF •\l"]
  56 -> "56R125" [style=solid]
 "56R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l108 thf_pair_connective: INFIX_EQUALITY •\l"]
  57 -> "57R108" [style=solid]
 "57R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l109 thf_pair_connective: INFIX_INEQUALITY •\l"]
  58 -> "58R109" [style=solid]
 "58R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l127 binary_connective: NIFF •\l"]
  59 -> "59R127" [style=solid]
 "59R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l128 binary_connective: NOR •\l"]
  60 -> "60R128" [style=solid]
 "60R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l129 binary_connective: NAND •\l"]
  61 -> "61R129" [style=solid]
 "61R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l107 th1_quantifier: TYPED_EXISTS •\l"]
  62 -> "62R107" [style=solid]
 "62R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l106 th1_quantifier: TYPED_FORALL •\l"]
  63 -> "63R106" [style=solid]
 "63R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 70 thf_let: LET • OPAREN thf_unitary_formula COMMA thf_formula CPAREN\l"]
  64 -> 121 [style=solid label="OPAREN"]
  65 [label="State 65\n\l 69 thf_conditional: DOLLAR_COND • OPAREN thf_logic_formula COMMA thf_logic_formula COMMA thf_logic_formula CPAREN\l"]
  65 -> 122 [style=solid label="OPAREN"]
  66 [label="State 66\n\l 60 thf_atom: VAR •\l"]
  66 -> "66R60" [style=solid]
 "66R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 65 thf_function: DOLLAR_WORD • OPAREN thf_arguments CPAREN\l120 atom: DOLLAR_WORD •\l"]
  67 -> 123 [style=solid label="OPAREN"]
  67 -> "67R120" [style=solid]
 "67R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 64 thf_function: FUNCTOR • OPAREN thf_arguments CPAREN\l122 constant: FUNCTOR •\l"]
  68 -> 124 [style=solid label="OPAREN"]
  68 -> "68R122" [style=solid]
 "68R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l124 defined_term: DISTINCT_OBJECT •\l"]
  69 -> "69R124" [style=solid]
 "69R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l123 defined_term: NUMBER •\l"]
  70 -> "70R123" [style=solid]
 "70R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA type COMMA thf_formula • CPAREN DOT\l"]
  71 -> 125 [style=solid label="CPAREN"]
  72 [label="State 72\n\l 24 thf_formula: thf_logic_formula •\l"]
  72 -> "72R24" [style=solid]
 "72R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 26 thf_logic_formula: thf_binary_formula •\l"]
  73 -> "73R26" [style=solid]
 "73R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 30 thf_binary_formula: thf_binary_pair •\l"]
  74 -> "74R30" [style=solid]
 "74R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 31 thf_binary_formula: thf_binary_tuple •\l"]
  75 -> "75R31" [style=solid]
 "75R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 34 thf_binary_tuple: thf_or_formula •\l 38 thf_or_formula: thf_or_formula • VLINE thf_unitary_formula\l"]
  76 -> 126 [style=solid label="VLINE"]
  76 -> "76R34" [style=solid]
 "76R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 35 thf_binary_tuple: thf_and_formula •\l 40 thf_and_formula: thf_and_formula • AND thf_unitary_formula\l"]
  77 -> 127 [style=solid label="AND"]
  77 -> "77R35" [style=solid]
 "77R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 36 thf_binary_tuple: thf_apply_formula •\l 42 thf_apply_formula: thf_apply_formula • APPLICATION thf_unitary_formula\l"]
  78 -> 128 [style=solid label="APPLICATION"]
  78 -> "78R36" [style=solid]
 "78R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 27 thf_logic_formula: thf_unitary_formula •\l 33 thf_binary_pair: thf_unitary_formula • thf_pair_connective thf_unitary_formula\l 37 thf_or_formula: thf_unitary_formula • VLINE thf_unitary_formula\l 39 thf_and_formula: thf_unitary_formula • AND thf_unitary_formula\l 41 thf_apply_formula: thf_unitary_formula • APPLICATION thf_unitary_formula\l 79 thf_unitary_type: thf_unitary_formula •\l"]
  79 -> 129 [style=solid label="VLINE"]
  79 -> 130 [style=solid label="AND"]
  79 -> 131 [style=solid label="APPLICATION"]
  79 -> 54 [style=solid label="ASSIGNMENT"]
  79 -> 55 [style=solid label="IMPLIES"]
  79 -> 56 [style=solid label="IFF"]
  79 -> 57 [style=solid label="INFIX_EQUALITY"]
  79 -> 58 [style=solid label="INFIX_INEQUALITY"]
  79 -> 59 [style=solid label="NIFF"]
  79 -> 60 [style=solid label="NOR"]
  79 -> 61 [style=solid label="NAND"]
  79 -> 132 [style=dashed label="thf_pair_connective"]
  79 -> 109 [style=dashed label="binary_connective"]
  79 -> "79R27" [style=solid]
 "79R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  79 -> "79R79" [label="[ARROW, PLUS, STAR]", style=solid]
 "79R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 43 thf_unitary_formula: thf_quantified_formula •\l"]
  80 -> "80R43" [style=solid]
 "80R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 50 thf_quantified_formula: thf_quantification • thf_unitary_formula\l"]
  81 -> 133 [style=solid label="OPAREN"]
  81 -> 39 [style=solid label="OBRA"]
  81 -> 40 [style=solid label="OKEY"]
  81 -> 41 [style=solid label="EQUAL_COMB"]
  81 -> 42 [style=solid label="DESCRIPTION_COMB"]
  81 -> 43 [style=solid label="CHOICE_COMB"]
  81 -> 44 [style=solid label="EXISTS_COMB"]
  81 -> 45 [style=solid label="FORALL_COMB"]
  81 -> 46 [style=solid label="DESCRIPTION"]
  81 -> 47 [style=solid label="CHOICE"]
  81 -> 48 [style=solid label="LAMBDA"]
  81 -> 49 [style=solid label="EXISTS"]
  81 -> 50 [style=solid label="FORALL"]
  81 -> 51 [style=solid label="VLINE"]
  81 -> 52 [style=solid label="AND"]
  81 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  81 -> 54 [style=solid label="ASSIGNMENT"]
  81 -> 55 [style=solid label="IMPLIES"]
  81 -> 56 [style=solid label="IFF"]
  81 -> 57 [style=solid label="INFIX_EQUALITY"]
  81 -> 58 [style=solid label="INFIX_INEQUALITY"]
  81 -> 59 [style=solid label="NIFF"]
  81 -> 60 [style=solid label="NOR"]
  81 -> 61 [style=solid label="NAND"]
  81 -> 62 [style=solid label="TYPED_EXISTS"]
  81 -> 63 [style=solid label="TYPED_FORALL"]
  81 -> 64 [style=solid label="LET"]
  81 -> 65 [style=solid label="DOLLAR_COND"]
  81 -> 66 [style=solid label="VAR"]
  81 -> 67 [style=solid label="DOLLAR_WORD"]
  81 -> 68 [style=solid label="FUNCTOR"]
  81 -> 69 [style=solid label="DISTINCT_OBJECT"]
  81 -> 70 [style=solid label="NUMBER"]
  81 -> 134 [style=dashed label="thf_unitary_formula"]
  81 -> 80 [style=dashed label="thf_quantified_formula"]
  81 -> 81 [style=dashed label="thf_quantification"]
  81 -> 82 [style=dashed label="thf_unary_formula"]
  81 -> 135 [style=dashed label="thf_atom"]
  81 -> 84 [style=dashed label="thf_function"]
  81 -> 85 [style=dashed label="thf_conn_term"]
  81 -> 86 [style=dashed label="thf_conditional"]
  81 -> 87 [style=dashed label="thf_let"]
  81 -> 117 [style=dashed label="thf_tuple"]
  81 -> 98 [style=dashed label="thf_quantifier"]
  81 -> 99 [style=dashed label="fof_quantifier"]
  81 -> 100 [style=dashed label="th0_quantifier"]
  81 -> 101 [style=dashed label="th1_quantifier"]
  81 -> 102 [style=dashed label="thf_pair_connective"]
  81 -> 103 [style=dashed label="thf_unary_connective"]
  81 -> 104 [style=dashed label="th1_unary_connective"]
  81 -> 105 [style=dashed label="atom"]
  81 -> 106 [style=dashed label="untyped_atom"]
  81 -> 107 [style=dashed label="constant"]
  81 -> 108 [style=dashed label="defined_term"]
  81 -> 109 [style=dashed label="binary_connective"]
  81 -> 110 [style=dashed label="assoc_connective"]
  82 [label="State 82\n\l 44 thf_unitary_formula: thf_unary_formula •\l"]
  82 -> "82R44" [style=solid]
 "82R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 45 thf_unitary_formula: thf_atom •\l 73 thf_typeable_formula: thf_atom •\l 75 thf_subtype: thf_atom • SUBTYPE_SIGN thf_atom\l"]
  83 -> 136 [style=solid label="SUBTYPE_SIGN"]
  83 -> "83R45" [style=solid]
 "83R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  83 -> "83R73" [label="[DDOT]", style=solid]
 "83R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 59 thf_atom: thf_function •\l"]
  84 -> "84R59" [style=solid]
 "84R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 62 thf_atom: thf_conn_term •\l"]
  85 -> "85R62" [style=solid]
 "85R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 46 thf_unitary_formula: thf_conditional •\l"]
  86 -> "86R46" [style=solid]
 "86R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 47 thf_unitary_formula: thf_let •\l"]
  87 -> "87R47" [style=solid]
 "87R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 28 thf_logic_formula: thf_type_formula •\l"]
  88 -> "88R28" [style=solid]
 "88R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 72 thf_type_formula: thf_typeable_formula • DDOT thf_top_level_type\l"]
  89 -> 137 [style=solid label="DDOT"]
  90 [label="State 90\n\l 29 thf_logic_formula: thf_subtype •\l"]
  90 -> "90R29" [style=solid]
 "90R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 84 thf_mapping_type: thf_unitary_type • ARROW thf_unitary_type\l 85                 | thf_unitary_type • ARROW thf_mapping_type\l 86 thf_xprod_type: thf_unitary_type • STAR thf_unitary_type\l 88 thf_union_type: thf_unitary_type • PLUS thf_unitary_type\l"]
  91 -> 138 [style=solid label="ARROW"]
  91 -> 139 [style=solid label="PLUS"]
  91 -> 140 [style=solid label="STAR"]
  92 [label="State 92\n\l 32 thf_binary_formula: thf_binary_type •\l"]
  92 -> "92R32" [style=solid]
 "92R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 81 thf_binary_type: thf_mapping_type •\l"]
  93 -> "93R81" [style=solid]
 "93R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 82 thf_binary_type: thf_xprod_type •\l 87 thf_xprod_type: thf_xprod_type • STAR thf_unitary_type\l"]
  94 -> 141 [style=solid label="STAR"]
  94 -> "94R82" [style=solid]
 "94R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 83 thf_binary_type: thf_union_type •\l 89 thf_union_type: thf_union_type • PLUS thf_unitary_type\l"]
  95 -> 142 [style=solid label="PLUS"]
  95 -> "95R83" [style=solid]
 "95R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 25 thf_formula: thf_sequent •\l"]
  96 -> "96R25" [style=solid]
 "96R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 48 thf_unitary_formula: thf_tuple •\l 90 thf_sequent: thf_tuple • GENTZ_ARROW thf_tuple\l"]
  97 -> 143 [style=solid label="GENTZ_ARROW"]
  97 -> "97R48" [style=solid]
 "97R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 51 thf_quantification: thf_quantifier • OBRA thf_variable_list CBRA DDOT\l"]
  98 -> 144 [style=solid label="OBRA"]
  99 [label="State 99\n\l 98 thf_quantifier: fof_quantifier •\l"]
  99 -> "99R98" [style=solid]
 "99R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 99 thf_quantifier: th0_quantifier •\l"]
  100 -> "100R99" [style=solid]
 "100R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l100 thf_quantifier: th1_quantifier •\l"]
  101 -> "101R100" [style=solid]
 "101R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 66 thf_conn_term: thf_pair_connective •\l"]
  102 -> "102R66" [style=solid]
 "102R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 57 thf_unary_formula: thf_unary_connective • OPAREN thf_logic_formula CPAREN\l 58                  | thf_unary_connective • VAR\l 68 thf_conn_term: thf_unary_connective •\l"]
  103 -> 145 [style=solid label="OPAREN"]
  103 -> 146 [style=solid label="VAR"]
  103 -> "103R68" [style=solid]
 "103R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l113 thf_unary_connective: th1_unary_connective •\l"]
  104 -> "104R113" [style=solid]
 "104R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 63 thf_function: atom •\l"]
  105 -> "105R63" [style=solid]
 "105R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l119 atom: untyped_atom •\l"]
  106 -> "106R119" [style=solid]
 "106R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l121 untyped_atom: constant •\l"]
  107 -> "107R121" [style=solid]
 "107R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 61 thf_atom: defined_term •\l"]
  108 -> "108R61" [style=solid]
 "108R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l110 thf_pair_connective: binary_connective •\l"]
  109 -> "109R110" [style=solid]
 "109R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 67 thf_conn_term: assoc_connective •\l"]
  110 -> "110R67" [style=solid]
 "110R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA type COMMA thf_formula • CPAREN DOT\l"]
  111 -> 147 [style=solid label="CPAREN"]
  112 [label="State 112\n\l 49 thf_unitary_formula: OPAREN thf_logic_formula • CPAREN\l 74 thf_typeable_formula: OPAREN thf_logic_formula • CPAREN\l"]
  112 -> 148 [style=solid label="CPAREN"]
  113 [label="State 113\n\l 91 thf_sequent: OPAREN thf_sequent • CPAREN\l"]
  113 -> 149 [style=solid label="CPAREN"]
  114 [label="State 114\n\l 49 thf_unitary_formula: OPAREN • thf_logic_formula CPAREN\l 74 thf_typeable_formula: OPAREN • thf_logic_formula CPAREN\l"]
  114 -> 114 [style=solid label="OPAREN"]
  114 -> 39 [style=solid label="OBRA"]
  114 -> 40 [style=solid label="OKEY"]
  114 -> 41 [style=solid label="EQUAL_COMB"]
  114 -> 42 [style=solid label="DESCRIPTION_COMB"]
  114 -> 43 [style=solid label="CHOICE_COMB"]
  114 -> 44 [style=solid label="EXISTS_COMB"]
  114 -> 45 [style=solid label="FORALL_COMB"]
  114 -> 46 [style=solid label="DESCRIPTION"]
  114 -> 47 [style=solid label="CHOICE"]
  114 -> 48 [style=solid label="LAMBDA"]
  114 -> 49 [style=solid label="EXISTS"]
  114 -> 50 [style=solid label="FORALL"]
  114 -> 51 [style=solid label="VLINE"]
  114 -> 52 [style=solid label="AND"]
  114 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  114 -> 54 [style=solid label="ASSIGNMENT"]
  114 -> 55 [style=solid label="IMPLIES"]
  114 -> 56 [style=solid label="IFF"]
  114 -> 57 [style=solid label="INFIX_EQUALITY"]
  114 -> 58 [style=solid label="INFIX_INEQUALITY"]
  114 -> 59 [style=solid label="NIFF"]
  114 -> 60 [style=solid label="NOR"]
  114 -> 61 [style=solid label="NAND"]
  114 -> 62 [style=solid label="TYPED_EXISTS"]
  114 -> 63 [style=solid label="TYPED_FORALL"]
  114 -> 64 [style=solid label="LET"]
  114 -> 65 [style=solid label="DOLLAR_COND"]
  114 -> 66 [style=solid label="VAR"]
  114 -> 67 [style=solid label="DOLLAR_WORD"]
  114 -> 68 [style=solid label="FUNCTOR"]
  114 -> 69 [style=solid label="DISTINCT_OBJECT"]
  114 -> 70 [style=solid label="NUMBER"]
  114 -> 112 [style=dashed label="thf_logic_formula"]
  114 -> 73 [style=dashed label="thf_binary_formula"]
  114 -> 74 [style=dashed label="thf_binary_pair"]
  114 -> 75 [style=dashed label="thf_binary_tuple"]
  114 -> 76 [style=dashed label="thf_or_formula"]
  114 -> 77 [style=dashed label="thf_and_formula"]
  114 -> 78 [style=dashed label="thf_apply_formula"]
  114 -> 79 [style=dashed label="thf_unitary_formula"]
  114 -> 80 [style=dashed label="thf_quantified_formula"]
  114 -> 81 [style=dashed label="thf_quantification"]
  114 -> 82 [style=dashed label="thf_unary_formula"]
  114 -> 83 [style=dashed label="thf_atom"]
  114 -> 84 [style=dashed label="thf_function"]
  114 -> 85 [style=dashed label="thf_conn_term"]
  114 -> 86 [style=dashed label="thf_conditional"]
  114 -> 87 [style=dashed label="thf_let"]
  114 -> 88 [style=dashed label="thf_type_formula"]
  114 -> 89 [style=dashed label="thf_typeable_formula"]
  114 -> 90 [style=dashed label="thf_subtype"]
  114 -> 91 [style=dashed label="thf_unitary_type"]
  114 -> 92 [style=dashed label="thf_binary_type"]
  114 -> 93 [style=dashed label="thf_mapping_type"]
  114 -> 94 [style=dashed label="thf_xprod_type"]
  114 -> 95 [style=dashed label="thf_union_type"]
  114 -> 117 [style=dashed label="thf_tuple"]
  114 -> 98 [style=dashed label="thf_quantifier"]
  114 -> 99 [style=dashed label="fof_quantifier"]
  114 -> 100 [style=dashed label="th0_quantifier"]
  114 -> 101 [style=dashed label="th1_quantifier"]
  114 -> 102 [style=dashed label="thf_pair_connective"]
  114 -> 103 [style=dashed label="thf_unary_connective"]
  114 -> 104 [style=dashed label="th1_unary_connective"]
  114 -> 105 [style=dashed label="atom"]
  114 -> 106 [style=dashed label="untyped_atom"]
  114 -> 107 [style=dashed label="constant"]
  114 -> 108 [style=dashed label="defined_term"]
  114 -> 109 [style=dashed label="binary_connective"]
  114 -> 110 [style=dashed label="assoc_connective"]
  115 [label="State 115\n\l 92 thf_tuple: OBRA CBRA •\l"]
  115 -> "115R92" [style=solid]
 "115R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l 96 thf_formula_list: thf_logic_formula •\l 97                 | thf_logic_formula • COMMA thf_formula_list\l"]
  116 -> 150 [style=solid label="COMMA"]
  116 -> "116R96" [style=solid]
 "116R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 48 thf_unitary_formula: thf_tuple •\l"]
  117 -> "117R48" [style=solid]
 "117R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l 93 thf_tuple: OBRA thf_formula_list • CBRA\l"]
  118 -> 151 [style=solid label="CBRA"]
  119 [label="State 119\n\l 94 thf_tuple: OKEY CKEY •\l"]
  119 -> "119R94" [style=solid]
 "119R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l 95 thf_tuple: OKEY thf_formula_list • CKEY\l"]
  120 -> 152 [style=solid label="CKEY"]
  121 [label="State 121\n\l 70 thf_let: LET OPAREN • thf_unitary_formula COMMA thf_formula CPAREN\l"]
  121 -> 133 [style=solid label="OPAREN"]
  121 -> 39 [style=solid label="OBRA"]
  121 -> 40 [style=solid label="OKEY"]
  121 -> 41 [style=solid label="EQUAL_COMB"]
  121 -> 42 [style=solid label="DESCRIPTION_COMB"]
  121 -> 43 [style=solid label="CHOICE_COMB"]
  121 -> 44 [style=solid label="EXISTS_COMB"]
  121 -> 45 [style=solid label="FORALL_COMB"]
  121 -> 46 [style=solid label="DESCRIPTION"]
  121 -> 47 [style=solid label="CHOICE"]
  121 -> 48 [style=solid label="LAMBDA"]
  121 -> 49 [style=solid label="EXISTS"]
  121 -> 50 [style=solid label="FORALL"]
  121 -> 51 [style=solid label="VLINE"]
  121 -> 52 [style=solid label="AND"]
  121 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  121 -> 54 [style=solid label="ASSIGNMENT"]
  121 -> 55 [style=solid label="IMPLIES"]
  121 -> 56 [style=solid label="IFF"]
  121 -> 57 [style=solid label="INFIX_EQUALITY"]
  121 -> 58 [style=solid label="INFIX_INEQUALITY"]
  121 -> 59 [style=solid label="NIFF"]
  121 -> 60 [style=solid label="NOR"]
  121 -> 61 [style=solid label="NAND"]
  121 -> 62 [style=solid label="TYPED_EXISTS"]
  121 -> 63 [style=solid label="TYPED_FORALL"]
  121 -> 64 [style=solid label="LET"]
  121 -> 65 [style=solid label="DOLLAR_COND"]
  121 -> 66 [style=solid label="VAR"]
  121 -> 67 [style=solid label="DOLLAR_WORD"]
  121 -> 68 [style=solid label="FUNCTOR"]
  121 -> 69 [style=solid label="DISTINCT_OBJECT"]
  121 -> 70 [style=solid label="NUMBER"]
  121 -> 153 [style=dashed label="thf_unitary_formula"]
  121 -> 80 [style=dashed label="thf_quantified_formula"]
  121 -> 81 [style=dashed label="thf_quantification"]
  121 -> 82 [style=dashed label="thf_unary_formula"]
  121 -> 135 [style=dashed label="thf_atom"]
  121 -> 84 [style=dashed label="thf_function"]
  121 -> 85 [style=dashed label="thf_conn_term"]
  121 -> 86 [style=dashed label="thf_conditional"]
  121 -> 87 [style=dashed label="thf_let"]
  121 -> 117 [style=dashed label="thf_tuple"]
  121 -> 98 [style=dashed label="thf_quantifier"]
  121 -> 99 [style=dashed label="fof_quantifier"]
  121 -> 100 [style=dashed label="th0_quantifier"]
  121 -> 101 [style=dashed label="th1_quantifier"]
  121 -> 102 [style=dashed label="thf_pair_connective"]
  121 -> 103 [style=dashed label="thf_unary_connective"]
  121 -> 104 [style=dashed label="th1_unary_connective"]
  121 -> 105 [style=dashed label="atom"]
  121 -> 106 [style=dashed label="untyped_atom"]
  121 -> 107 [style=dashed label="constant"]
  121 -> 108 [style=dashed label="defined_term"]
  121 -> 109 [style=dashed label="binary_connective"]
  121 -> 110 [style=dashed label="assoc_connective"]
  122 [label="State 122\n\l 69 thf_conditional: DOLLAR_COND OPAREN • thf_logic_formula COMMA thf_logic_formula COMMA thf_logic_formula CPAREN\l"]
  122 -> 114 [style=solid label="OPAREN"]
  122 -> 39 [style=solid label="OBRA"]
  122 -> 40 [style=solid label="OKEY"]
  122 -> 41 [style=solid label="EQUAL_COMB"]
  122 -> 42 [style=solid label="DESCRIPTION_COMB"]
  122 -> 43 [style=solid label="CHOICE_COMB"]
  122 -> 44 [style=solid label="EXISTS_COMB"]
  122 -> 45 [style=solid label="FORALL_COMB"]
  122 -> 46 [style=solid label="DESCRIPTION"]
  122 -> 47 [style=solid label="CHOICE"]
  122 -> 48 [style=solid label="LAMBDA"]
  122 -> 49 [style=solid label="EXISTS"]
  122 -> 50 [style=solid label="FORALL"]
  122 -> 51 [style=solid label="VLINE"]
  122 -> 52 [style=solid label="AND"]
  122 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  122 -> 54 [style=solid label="ASSIGNMENT"]
  122 -> 55 [style=solid label="IMPLIES"]
  122 -> 56 [style=solid label="IFF"]
  122 -> 57 [style=solid label="INFIX_EQUALITY"]
  122 -> 58 [style=solid label="INFIX_INEQUALITY"]
  122 -> 59 [style=solid label="NIFF"]
  122 -> 60 [style=solid label="NOR"]
  122 -> 61 [style=solid label="NAND"]
  122 -> 62 [style=solid label="TYPED_EXISTS"]
  122 -> 63 [style=solid label="TYPED_FORALL"]
  122 -> 64 [style=solid label="LET"]
  122 -> 65 [style=solid label="DOLLAR_COND"]
  122 -> 66 [style=solid label="VAR"]
  122 -> 67 [style=solid label="DOLLAR_WORD"]
  122 -> 68 [style=solid label="FUNCTOR"]
  122 -> 69 [style=solid label="DISTINCT_OBJECT"]
  122 -> 70 [style=solid label="NUMBER"]
  122 -> 154 [style=dashed label="thf_logic_formula"]
  122 -> 73 [style=dashed label="thf_binary_formula"]
  122 -> 74 [style=dashed label="thf_binary_pair"]
  122 -> 75 [style=dashed label="thf_binary_tuple"]
  122 -> 76 [style=dashed label="thf_or_formula"]
  122 -> 77 [style=dashed label="thf_and_formula"]
  122 -> 78 [style=dashed label="thf_apply_formula"]
  122 -> 79 [style=dashed label="thf_unitary_formula"]
  122 -> 80 [style=dashed label="thf_quantified_formula"]
  122 -> 81 [style=dashed label="thf_quantification"]
  122 -> 82 [style=dashed label="thf_unary_formula"]
  122 -> 83 [style=dashed label="thf_atom"]
  122 -> 84 [style=dashed label="thf_function"]
  122 -> 85 [style=dashed label="thf_conn_term"]
  122 -> 86 [style=dashed label="thf_conditional"]
  122 -> 87 [style=dashed label="thf_let"]
  122 -> 88 [style=dashed label="thf_type_formula"]
  122 -> 89 [style=dashed label="thf_typeable_formula"]
  122 -> 90 [style=dashed label="thf_subtype"]
  122 -> 91 [style=dashed label="thf_unitary_type"]
  122 -> 92 [style=dashed label="thf_binary_type"]
  122 -> 93 [style=dashed label="thf_mapping_type"]
  122 -> 94 [style=dashed label="thf_xprod_type"]
  122 -> 95 [style=dashed label="thf_union_type"]
  122 -> 117 [style=dashed label="thf_tuple"]
  122 -> 98 [style=dashed label="thf_quantifier"]
  122 -> 99 [style=dashed label="fof_quantifier"]
  122 -> 100 [style=dashed label="th0_quantifier"]
  122 -> 101 [style=dashed label="th1_quantifier"]
  122 -> 102 [style=dashed label="thf_pair_connective"]
  122 -> 103 [style=dashed label="thf_unary_connective"]
  122 -> 104 [style=dashed label="th1_unary_connective"]
  122 -> 105 [style=dashed label="atom"]
  122 -> 106 [style=dashed label="untyped_atom"]
  122 -> 107 [style=dashed label="constant"]
  122 -> 108 [style=dashed label="defined_term"]
  122 -> 109 [style=dashed label="binary_connective"]
  122 -> 110 [style=dashed label="assoc_connective"]
  123 [label="State 123\n\l 65 thf_function: DOLLAR_WORD OPAREN • thf_arguments CPAREN\l"]
  123 -> 114 [style=solid label="OPAREN"]
  123 -> 39 [style=solid label="OBRA"]
  123 -> 40 [style=solid label="OKEY"]
  123 -> 41 [style=solid label="EQUAL_COMB"]
  123 -> 42 [style=solid label="DESCRIPTION_COMB"]
  123 -> 43 [style=solid label="CHOICE_COMB"]
  123 -> 44 [style=solid label="EXISTS_COMB"]
  123 -> 45 [style=solid label="FORALL_COMB"]
  123 -> 46 [style=solid label="DESCRIPTION"]
  123 -> 47 [style=solid label="CHOICE"]
  123 -> 48 [style=solid label="LAMBDA"]
  123 -> 49 [style=solid label="EXISTS"]
  123 -> 50 [style=solid label="FORALL"]
  123 -> 51 [style=solid label="VLINE"]
  123 -> 52 [style=solid label="AND"]
  123 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  123 -> 54 [style=solid label="ASSIGNMENT"]
  123 -> 55 [style=solid label="IMPLIES"]
  123 -> 56 [style=solid label="IFF"]
  123 -> 57 [style=solid label="INFIX_EQUALITY"]
  123 -> 58 [style=solid label="INFIX_INEQUALITY"]
  123 -> 59 [style=solid label="NIFF"]
  123 -> 60 [style=solid label="NOR"]
  123 -> 61 [style=solid label="NAND"]
  123 -> 62 [style=solid label="TYPED_EXISTS"]
  123 -> 63 [style=solid label="TYPED_FORALL"]
  123 -> 64 [style=solid label="LET"]
  123 -> 65 [style=solid label="DOLLAR_COND"]
  123 -> 66 [style=solid label="VAR"]
  123 -> 67 [style=solid label="DOLLAR_WORD"]
  123 -> 68 [style=solid label="FUNCTOR"]
  123 -> 69 [style=solid label="DISTINCT_OBJECT"]
  123 -> 70 [style=solid label="NUMBER"]
  123 -> 116 [style=dashed label="thf_logic_formula"]
  123 -> 73 [style=dashed label="thf_binary_formula"]
  123 -> 74 [style=dashed label="thf_binary_pair"]
  123 -> 75 [style=dashed label="thf_binary_tuple"]
  123 -> 76 [style=dashed label="thf_or_formula"]
  123 -> 77 [style=dashed label="thf_and_formula"]
  123 -> 78 [style=dashed label="thf_apply_formula"]
  123 -> 79 [style=dashed label="thf_unitary_formula"]
  123 -> 80 [style=dashed label="thf_quantified_formula"]
  123 -> 81 [style=dashed label="thf_quantification"]
  123 -> 82 [style=dashed label="thf_unary_formula"]
  123 -> 83 [style=dashed label="thf_atom"]
  123 -> 84 [style=dashed label="thf_function"]
  123 -> 85 [style=dashed label="thf_conn_term"]
  123 -> 86 [style=dashed label="thf_conditional"]
  123 -> 87 [style=dashed label="thf_let"]
  123 -> 155 [style=dashed label="thf_arguments"]
  123 -> 88 [style=dashed label="thf_type_formula"]
  123 -> 89 [style=dashed label="thf_typeable_formula"]
  123 -> 90 [style=dashed label="thf_subtype"]
  123 -> 91 [style=dashed label="thf_unitary_type"]
  123 -> 92 [style=dashed label="thf_binary_type"]
  123 -> 93 [style=dashed label="thf_mapping_type"]
  123 -> 94 [style=dashed label="thf_xprod_type"]
  123 -> 95 [style=dashed label="thf_union_type"]
  123 -> 117 [style=dashed label="thf_tuple"]
  123 -> 156 [style=dashed label="thf_formula_list"]
  123 -> 98 [style=dashed label="thf_quantifier"]
  123 -> 99 [style=dashed label="fof_quantifier"]
  123 -> 100 [style=dashed label="th0_quantifier"]
  123 -> 101 [style=dashed label="th1_quantifier"]
  123 -> 102 [style=dashed label="thf_pair_connective"]
  123 -> 103 [style=dashed label="thf_unary_connective"]
  123 -> 104 [style=dashed label="th1_unary_connective"]
  123 -> 105 [style=dashed label="atom"]
  123 -> 106 [style=dashed label="untyped_atom"]
  123 -> 107 [style=dashed label="constant"]
  123 -> 108 [style=dashed label="defined_term"]
  123 -> 109 [style=dashed label="binary_connective"]
  123 -> 110 [style=dashed label="assoc_connective"]
  124 [label="State 124\n\l 64 thf_function: FUNCTOR OPAREN • thf_arguments CPAREN\l"]
  124 -> 114 [style=solid label="OPAREN"]
  124 -> 39 [style=solid label="OBRA"]
  124 -> 40 [style=solid label="OKEY"]
  124 -> 41 [style=solid label="EQUAL_COMB"]
  124 -> 42 [style=solid label="DESCRIPTION_COMB"]
  124 -> 43 [style=solid label="CHOICE_COMB"]
  124 -> 44 [style=solid label="EXISTS_COMB"]
  124 -> 45 [style=solid label="FORALL_COMB"]
  124 -> 46 [style=solid label="DESCRIPTION"]
  124 -> 47 [style=solid label="CHOICE"]
  124 -> 48 [style=solid label="LAMBDA"]
  124 -> 49 [style=solid label="EXISTS"]
  124 -> 50 [style=solid label="FORALL"]
  124 -> 51 [style=solid label="VLINE"]
  124 -> 52 [style=solid label="AND"]
  124 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  124 -> 54 [style=solid label="ASSIGNMENT"]
  124 -> 55 [style=solid label="IMPLIES"]
  124 -> 56 [style=solid label="IFF"]
  124 -> 57 [style=solid label="INFIX_EQUALITY"]
  124 -> 58 [style=solid label="INFIX_INEQUALITY"]
  124 -> 59 [style=solid label="NIFF"]
  124 -> 60 [style=solid label="NOR"]
  124 -> 61 [style=solid label="NAND"]
  124 -> 62 [style=solid label="TYPED_EXISTS"]
  124 -> 63 [style=solid label="TYPED_FORALL"]
  124 -> 64 [style=solid label="LET"]
  124 -> 65 [style=solid label="DOLLAR_COND"]
  124 -> 66 [style=solid label="VAR"]
  124 -> 67 [style=solid label="DOLLAR_WORD"]
  124 -> 68 [style=solid label="FUNCTOR"]
  124 -> 69 [style=solid label="DISTINCT_OBJECT"]
  124 -> 70 [style=solid label="NUMBER"]
  124 -> 116 [style=dashed label="thf_logic_formula"]
  124 -> 73 [style=dashed label="thf_binary_formula"]
  124 -> 74 [style=dashed label="thf_binary_pair"]
  124 -> 75 [style=dashed label="thf_binary_tuple"]
  124 -> 76 [style=dashed label="thf_or_formula"]
  124 -> 77 [style=dashed label="thf_and_formula"]
  124 -> 78 [style=dashed label="thf_apply_formula"]
  124 -> 79 [style=dashed label="thf_unitary_formula"]
  124 -> 80 [style=dashed label="thf_quantified_formula"]
  124 -> 81 [style=dashed label="thf_quantification"]
  124 -> 82 [style=dashed label="thf_unary_formula"]
  124 -> 83 [style=dashed label="thf_atom"]
  124 -> 84 [style=dashed label="thf_function"]
  124 -> 85 [style=dashed label="thf_conn_term"]
  124 -> 86 [style=dashed label="thf_conditional"]
  124 -> 87 [style=dashed label="thf_let"]
  124 -> 157 [style=dashed label="thf_arguments"]
  124 -> 88 [style=dashed label="thf_type_formula"]
  124 -> 89 [style=dashed label="thf_typeable_formula"]
  124 -> 90 [style=dashed label="thf_subtype"]
  124 -> 91 [style=dashed label="thf_unitary_type"]
  124 -> 92 [style=dashed label="thf_binary_type"]
  124 -> 93 [style=dashed label="thf_mapping_type"]
  124 -> 94 [style=dashed label="thf_xprod_type"]
  124 -> 95 [style=dashed label="thf_union_type"]
  124 -> 117 [style=dashed label="thf_tuple"]
  124 -> 156 [style=dashed label="thf_formula_list"]
  124 -> 98 [style=dashed label="thf_quantifier"]
  124 -> 99 [style=dashed label="fof_quantifier"]
  124 -> 100 [style=dashed label="th0_quantifier"]
  124 -> 101 [style=dashed label="th1_quantifier"]
  124 -> 102 [style=dashed label="thf_pair_connective"]
  124 -> 103 [style=dashed label="thf_unary_connective"]
  124 -> 104 [style=dashed label="th1_unary_connective"]
  124 -> 105 [style=dashed label="atom"]
  124 -> 106 [style=dashed label="untyped_atom"]
  124 -> 107 [style=dashed label="constant"]
  124 -> 108 [style=dashed label="defined_term"]
  124 -> 109 [style=dashed label="binary_connective"]
  124 -> 110 [style=dashed label="assoc_connective"]
  125 [label="State 125\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA type COMMA thf_formula CPAREN • DOT\l"]
  125 -> 158 [style=solid label="DOT"]
  126 [label="State 126\n\l 38 thf_or_formula: thf_or_formula VLINE • thf_unitary_formula\l"]
  126 -> 133 [style=solid label="OPAREN"]
  126 -> 39 [style=solid label="OBRA"]
  126 -> 40 [style=solid label="OKEY"]
  126 -> 41 [style=solid label="EQUAL_COMB"]
  126 -> 42 [style=solid label="DESCRIPTION_COMB"]
  126 -> 43 [style=solid label="CHOICE_COMB"]
  126 -> 44 [style=solid label="EXISTS_COMB"]
  126 -> 45 [style=solid label="FORALL_COMB"]
  126 -> 46 [style=solid label="DESCRIPTION"]
  126 -> 47 [style=solid label="CHOICE"]
  126 -> 48 [style=solid label="LAMBDA"]
  126 -> 49 [style=solid label="EXISTS"]
  126 -> 50 [style=solid label="FORALL"]
  126 -> 51 [style=solid label="VLINE"]
  126 -> 52 [style=solid label="AND"]
  126 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  126 -> 54 [style=solid label="ASSIGNMENT"]
  126 -> 55 [style=solid label="IMPLIES"]
  126 -> 56 [style=solid label="IFF"]
  126 -> 57 [style=solid label="INFIX_EQUALITY"]
  126 -> 58 [style=solid label="INFIX_INEQUALITY"]
  126 -> 59 [style=solid label="NIFF"]
  126 -> 60 [style=solid label="NOR"]
  126 -> 61 [style=solid label="NAND"]
  126 -> 62 [style=solid label="TYPED_EXISTS"]
  126 -> 63 [style=solid label="TYPED_FORALL"]
  126 -> 64 [style=solid label="LET"]
  126 -> 65 [style=solid label="DOLLAR_COND"]
  126 -> 66 [style=solid label="VAR"]
  126 -> 67 [style=solid label="DOLLAR_WORD"]
  126 -> 68 [style=solid label="FUNCTOR"]
  126 -> 69 [style=solid label="DISTINCT_OBJECT"]
  126 -> 70 [style=solid label="NUMBER"]
  126 -> 159 [style=dashed label="thf_unitary_formula"]
  126 -> 80 [style=dashed label="thf_quantified_formula"]
  126 -> 81 [style=dashed label="thf_quantification"]
  126 -> 82 [style=dashed label="thf_unary_formula"]
  126 -> 135 [style=dashed label="thf_atom"]
  126 -> 84 [style=dashed label="thf_function"]
  126 -> 85 [style=dashed label="thf_conn_term"]
  126 -> 86 [style=dashed label="thf_conditional"]
  126 -> 87 [style=dashed label="thf_let"]
  126 -> 117 [style=dashed label="thf_tuple"]
  126 -> 98 [style=dashed label="thf_quantifier"]
  126 -> 99 [style=dashed label="fof_quantifier"]
  126 -> 100 [style=dashed label="th0_quantifier"]
  126 -> 101 [style=dashed label="th1_quantifier"]
  126 -> 102 [style=dashed label="thf_pair_connective"]
  126 -> 103 [style=dashed label="thf_unary_connective"]
  126 -> 104 [style=dashed label="th1_unary_connective"]
  126 -> 105 [style=dashed label="atom"]
  126 -> 106 [style=dashed label="untyped_atom"]
  126 -> 107 [style=dashed label="constant"]
  126 -> 108 [style=dashed label="defined_term"]
  126 -> 109 [style=dashed label="binary_connective"]
  126 -> 110 [style=dashed label="assoc_connective"]
  127 [label="State 127\n\l 40 thf_and_formula: thf_and_formula AND • thf_unitary_formula\l"]
  127 -> 133 [style=solid label="OPAREN"]
  127 -> 39 [style=solid label="OBRA"]
  127 -> 40 [style=solid label="OKEY"]
  127 -> 41 [style=solid label="EQUAL_COMB"]
  127 -> 42 [style=solid label="DESCRIPTION_COMB"]
  127 -> 43 [style=solid label="CHOICE_COMB"]
  127 -> 44 [style=solid label="EXISTS_COMB"]
  127 -> 45 [style=solid label="FORALL_COMB"]
  127 -> 46 [style=solid label="DESCRIPTION"]
  127 -> 47 [style=solid label="CHOICE"]
  127 -> 48 [style=solid label="LAMBDA"]
  127 -> 49 [style=solid label="EXISTS"]
  127 -> 50 [style=solid label="FORALL"]
  127 -> 51 [style=solid label="VLINE"]
  127 -> 52 [style=solid label="AND"]
  127 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  127 -> 54 [style=solid label="ASSIGNMENT"]
  127 -> 55 [style=solid label="IMPLIES"]
  127 -> 56 [style=solid label="IFF"]
  127 -> 57 [style=solid label="INFIX_EQUALITY"]
  127 -> 58 [style=solid label="INFIX_INEQUALITY"]
  127 -> 59 [style=solid label="NIFF"]
  127 -> 60 [style=solid label="NOR"]
  127 -> 61 [style=solid label="NAND"]
  127 -> 62 [style=solid label="TYPED_EXISTS"]
  127 -> 63 [style=solid label="TYPED_FORALL"]
  127 -> 64 [style=solid label="LET"]
  127 -> 65 [style=solid label="DOLLAR_COND"]
  127 -> 66 [style=solid label="VAR"]
  127 -> 67 [style=solid label="DOLLAR_WORD"]
  127 -> 68 [style=solid label="FUNCTOR"]
  127 -> 69 [style=solid label="DISTINCT_OBJECT"]
  127 -> 70 [style=solid label="NUMBER"]
  127 -> 160 [style=dashed label="thf_unitary_formula"]
  127 -> 80 [style=dashed label="thf_quantified_formula"]
  127 -> 81 [style=dashed label="thf_quantification"]
  127 -> 82 [style=dashed label="thf_unary_formula"]
  127 -> 135 [style=dashed label="thf_atom"]
  127 -> 84 [style=dashed label="thf_function"]
  127 -> 85 [style=dashed label="thf_conn_term"]
  127 -> 86 [style=dashed label="thf_conditional"]
  127 -> 87 [style=dashed label="thf_let"]
  127 -> 117 [style=dashed label="thf_tuple"]
  127 -> 98 [style=dashed label="thf_quantifier"]
  127 -> 99 [style=dashed label="fof_quantifier"]
  127 -> 100 [style=dashed label="th0_quantifier"]
  127 -> 101 [style=dashed label="th1_quantifier"]
  127 -> 102 [style=dashed label="thf_pair_connective"]
  127 -> 103 [style=dashed label="thf_unary_connective"]
  127 -> 104 [style=dashed label="th1_unary_connective"]
  127 -> 105 [style=dashed label="atom"]
  127 -> 106 [style=dashed label="untyped_atom"]
  127 -> 107 [style=dashed label="constant"]
  127 -> 108 [style=dashed label="defined_term"]
  127 -> 109 [style=dashed label="binary_connective"]
  127 -> 110 [style=dashed label="assoc_connective"]
  128 [label="State 128\n\l 42 thf_apply_formula: thf_apply_formula APPLICATION • thf_unitary_formula\l"]
  128 -> 133 [style=solid label="OPAREN"]
  128 -> 39 [style=solid label="OBRA"]
  128 -> 40 [style=solid label="OKEY"]
  128 -> 41 [style=solid label="EQUAL_COMB"]
  128 -> 42 [style=solid label="DESCRIPTION_COMB"]
  128 -> 43 [style=solid label="CHOICE_COMB"]
  128 -> 44 [style=solid label="EXISTS_COMB"]
  128 -> 45 [style=solid label="FORALL_COMB"]
  128 -> 46 [style=solid label="DESCRIPTION"]
  128 -> 47 [style=solid label="CHOICE"]
  128 -> 48 [style=solid label="LAMBDA"]
  128 -> 49 [style=solid label="EXISTS"]
  128 -> 50 [style=solid label="FORALL"]
  128 -> 51 [style=solid label="VLINE"]
  128 -> 52 [style=solid label="AND"]
  128 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  128 -> 54 [style=solid label="ASSIGNMENT"]
  128 -> 55 [style=solid label="IMPLIES"]
  128 -> 56 [style=solid label="IFF"]
  128 -> 57 [style=solid label="INFIX_EQUALITY"]
  128 -> 58 [style=solid label="INFIX_INEQUALITY"]
  128 -> 59 [style=solid label="NIFF"]
  128 -> 60 [style=solid label="NOR"]
  128 -> 61 [style=solid label="NAND"]
  128 -> 62 [style=solid label="TYPED_EXISTS"]
  128 -> 63 [style=solid label="TYPED_FORALL"]
  128 -> 64 [style=solid label="LET"]
  128 -> 65 [style=solid label="DOLLAR_COND"]
  128 -> 66 [style=solid label="VAR"]
  128 -> 67 [style=solid label="DOLLAR_WORD"]
  128 -> 68 [style=solid label="FUNCTOR"]
  128 -> 69 [style=solid label="DISTINCT_OBJECT"]
  128 -> 70 [style=solid label="NUMBER"]
  128 -> 161 [style=dashed label="thf_unitary_formula"]
  128 -> 80 [style=dashed label="thf_quantified_formula"]
  128 -> 81 [style=dashed label="thf_quantification"]
  128 -> 82 [style=dashed label="thf_unary_formula"]
  128 -> 135 [style=dashed label="thf_atom"]
  128 -> 84 [style=dashed label="thf_function"]
  128 -> 85 [style=dashed label="thf_conn_term"]
  128 -> 86 [style=dashed label="thf_conditional"]
  128 -> 87 [style=dashed label="thf_let"]
  128 -> 117 [style=dashed label="thf_tuple"]
  128 -> 98 [style=dashed label="thf_quantifier"]
  128 -> 99 [style=dashed label="fof_quantifier"]
  128 -> 100 [style=dashed label="th0_quantifier"]
  128 -> 101 [style=dashed label="th1_quantifier"]
  128 -> 102 [style=dashed label="thf_pair_connective"]
  128 -> 103 [style=dashed label="thf_unary_connective"]
  128 -> 104 [style=dashed label="th1_unary_connective"]
  128 -> 105 [style=dashed label="atom"]
  128 -> 106 [style=dashed label="untyped_atom"]
  128 -> 107 [style=dashed label="constant"]
  128 -> 108 [style=dashed label="defined_term"]
  128 -> 109 [style=dashed label="binary_connective"]
  128 -> 110 [style=dashed label="assoc_connective"]
  129 [label="State 129\n\l 37 thf_or_formula: thf_unitary_formula VLINE • thf_unitary_formula\l"]
  129 -> 133 [style=solid label="OPAREN"]
  129 -> 39 [style=solid label="OBRA"]
  129 -> 40 [style=solid label="OKEY"]
  129 -> 41 [style=solid label="EQUAL_COMB"]
  129 -> 42 [style=solid label="DESCRIPTION_COMB"]
  129 -> 43 [style=solid label="CHOICE_COMB"]
  129 -> 44 [style=solid label="EXISTS_COMB"]
  129 -> 45 [style=solid label="FORALL_COMB"]
  129 -> 46 [style=solid label="DESCRIPTION"]
  129 -> 47 [style=solid label="CHOICE"]
  129 -> 48 [style=solid label="LAMBDA"]
  129 -> 49 [style=solid label="EXISTS"]
  129 -> 50 [style=solid label="FORALL"]
  129 -> 51 [style=solid label="VLINE"]
  129 -> 52 [style=solid label="AND"]
  129 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  129 -> 54 [style=solid label="ASSIGNMENT"]
  129 -> 55 [style=solid label="IMPLIES"]
  129 -> 56 [style=solid label="IFF"]
  129 -> 57 [style=solid label="INFIX_EQUALITY"]
  129 -> 58 [style=solid label="INFIX_INEQUALITY"]
  129 -> 59 [style=solid label="NIFF"]
  129 -> 60 [style=solid label="NOR"]
  129 -> 61 [style=solid label="NAND"]
  129 -> 62 [style=solid label="TYPED_EXISTS"]
  129 -> 63 [style=solid label="TYPED_FORALL"]
  129 -> 64 [style=solid label="LET"]
  129 -> 65 [style=solid label="DOLLAR_COND"]
  129 -> 66 [style=solid label="VAR"]
  129 -> 67 [style=solid label="DOLLAR_WORD"]
  129 -> 68 [style=solid label="FUNCTOR"]
  129 -> 69 [style=solid label="DISTINCT_OBJECT"]
  129 -> 70 [style=solid label="NUMBER"]
  129 -> 162 [style=dashed label="thf_unitary_formula"]
  129 -> 80 [style=dashed label="thf_quantified_formula"]
  129 -> 81 [style=dashed label="thf_quantification"]
  129 -> 82 [style=dashed label="thf_unary_formula"]
  129 -> 135 [style=dashed label="thf_atom"]
  129 -> 84 [style=dashed label="thf_function"]
  129 -> 85 [style=dashed label="thf_conn_term"]
  129 -> 86 [style=dashed label="thf_conditional"]
  129 -> 87 [style=dashed label="thf_let"]
  129 -> 117 [style=dashed label="thf_tuple"]
  129 -> 98 [style=dashed label="thf_quantifier"]
  129 -> 99 [style=dashed label="fof_quantifier"]
  129 -> 100 [style=dashed label="th0_quantifier"]
  129 -> 101 [style=dashed label="th1_quantifier"]
  129 -> 102 [style=dashed label="thf_pair_connective"]
  129 -> 103 [style=dashed label="thf_unary_connective"]
  129 -> 104 [style=dashed label="th1_unary_connective"]
  129 -> 105 [style=dashed label="atom"]
  129 -> 106 [style=dashed label="untyped_atom"]
  129 -> 107 [style=dashed label="constant"]
  129 -> 108 [style=dashed label="defined_term"]
  129 -> 109 [style=dashed label="binary_connective"]
  129 -> 110 [style=dashed label="assoc_connective"]
  130 [label="State 130\n\l 39 thf_and_formula: thf_unitary_formula AND • thf_unitary_formula\l"]
  130 -> 133 [style=solid label="OPAREN"]
  130 -> 39 [style=solid label="OBRA"]
  130 -> 40 [style=solid label="OKEY"]
  130 -> 41 [style=solid label="EQUAL_COMB"]
  130 -> 42 [style=solid label="DESCRIPTION_COMB"]
  130 -> 43 [style=solid label="CHOICE_COMB"]
  130 -> 44 [style=solid label="EXISTS_COMB"]
  130 -> 45 [style=solid label="FORALL_COMB"]
  130 -> 46 [style=solid label="DESCRIPTION"]
  130 -> 47 [style=solid label="CHOICE"]
  130 -> 48 [style=solid label="LAMBDA"]
  130 -> 49 [style=solid label="EXISTS"]
  130 -> 50 [style=solid label="FORALL"]
  130 -> 51 [style=solid label="VLINE"]
  130 -> 52 [style=solid label="AND"]
  130 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  130 -> 54 [style=solid label="ASSIGNMENT"]
  130 -> 55 [style=solid label="IMPLIES"]
  130 -> 56 [style=solid label="IFF"]
  130 -> 57 [style=solid label="INFIX_EQUALITY"]
  130 -> 58 [style=solid label="INFIX_INEQUALITY"]
  130 -> 59 [style=solid label="NIFF"]
  130 -> 60 [style=solid label="NOR"]
  130 -> 61 [style=solid label="NAND"]
  130 -> 62 [style=solid label="TYPED_EXISTS"]
  130 -> 63 [style=solid label="TYPED_FORALL"]
  130 -> 64 [style=solid label="LET"]
  130 -> 65 [style=solid label="DOLLAR_COND"]
  130 -> 66 [style=solid label="VAR"]
  130 -> 67 [style=solid label="DOLLAR_WORD"]
  130 -> 68 [style=solid label="FUNCTOR"]
  130 -> 69 [style=solid label="DISTINCT_OBJECT"]
  130 -> 70 [style=solid label="NUMBER"]
  130 -> 163 [style=dashed label="thf_unitary_formula"]
  130 -> 80 [style=dashed label="thf_quantified_formula"]
  130 -> 81 [style=dashed label="thf_quantification"]
  130 -> 82 [style=dashed label="thf_unary_formula"]
  130 -> 135 [style=dashed label="thf_atom"]
  130 -> 84 [style=dashed label="thf_function"]
  130 -> 85 [style=dashed label="thf_conn_term"]
  130 -> 86 [style=dashed label="thf_conditional"]
  130 -> 87 [style=dashed label="thf_let"]
  130 -> 117 [style=dashed label="thf_tuple"]
  130 -> 98 [style=dashed label="thf_quantifier"]
  130 -> 99 [style=dashed label="fof_quantifier"]
  130 -> 100 [style=dashed label="th0_quantifier"]
  130 -> 101 [style=dashed label="th1_quantifier"]
  130 -> 102 [style=dashed label="thf_pair_connective"]
  130 -> 103 [style=dashed label="thf_unary_connective"]
  130 -> 104 [style=dashed label="th1_unary_connective"]
  130 -> 105 [style=dashed label="atom"]
  130 -> 106 [style=dashed label="untyped_atom"]
  130 -> 107 [style=dashed label="constant"]
  130 -> 108 [style=dashed label="defined_term"]
  130 -> 109 [style=dashed label="binary_connective"]
  130 -> 110 [style=dashed label="assoc_connective"]
  131 [label="State 131\n\l 41 thf_apply_formula: thf_unitary_formula APPLICATION • thf_unitary_formula\l"]
  131 -> 133 [style=solid label="OPAREN"]
  131 -> 39 [style=solid label="OBRA"]
  131 -> 40 [style=solid label="OKEY"]
  131 -> 41 [style=solid label="EQUAL_COMB"]
  131 -> 42 [style=solid label="DESCRIPTION_COMB"]
  131 -> 43 [style=solid label="CHOICE_COMB"]
  131 -> 44 [style=solid label="EXISTS_COMB"]
  131 -> 45 [style=solid label="FORALL_COMB"]
  131 -> 46 [style=solid label="DESCRIPTION"]
  131 -> 47 [style=solid label="CHOICE"]
  131 -> 48 [style=solid label="LAMBDA"]
  131 -> 49 [style=solid label="EXISTS"]
  131 -> 50 [style=solid label="FORALL"]
  131 -> 51 [style=solid label="VLINE"]
  131 -> 52 [style=solid label="AND"]
  131 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  131 -> 54 [style=solid label="ASSIGNMENT"]
  131 -> 55 [style=solid label="IMPLIES"]
  131 -> 56 [style=solid label="IFF"]
  131 -> 57 [style=solid label="INFIX_EQUALITY"]
  131 -> 58 [style=solid label="INFIX_INEQUALITY"]
  131 -> 59 [style=solid label="NIFF"]
  131 -> 60 [style=solid label="NOR"]
  131 -> 61 [style=solid label="NAND"]
  131 -> 62 [style=solid label="TYPED_EXISTS"]
  131 -> 63 [style=solid label="TYPED_FORALL"]
  131 -> 64 [style=solid label="LET"]
  131 -> 65 [style=solid label="DOLLAR_COND"]
  131 -> 66 [style=solid label="VAR"]
  131 -> 67 [style=solid label="DOLLAR_WORD"]
  131 -> 68 [style=solid label="FUNCTOR"]
  131 -> 69 [style=solid label="DISTINCT_OBJECT"]
  131 -> 70 [style=solid label="NUMBER"]
  131 -> 164 [style=dashed label="thf_unitary_formula"]
  131 -> 80 [style=dashed label="thf_quantified_formula"]
  131 -> 81 [style=dashed label="thf_quantification"]
  131 -> 82 [style=dashed label="thf_unary_formula"]
  131 -> 135 [style=dashed label="thf_atom"]
  131 -> 84 [style=dashed label="thf_function"]
  131 -> 85 [style=dashed label="thf_conn_term"]
  131 -> 86 [style=dashed label="thf_conditional"]
  131 -> 87 [style=dashed label="thf_let"]
  131 -> 117 [style=dashed label="thf_tuple"]
  131 -> 98 [style=dashed label="thf_quantifier"]
  131 -> 99 [style=dashed label="fof_quantifier"]
  131 -> 100 [style=dashed label="th0_quantifier"]
  131 -> 101 [style=dashed label="th1_quantifier"]
  131 -> 102 [style=dashed label="thf_pair_connective"]
  131 -> 103 [style=dashed label="thf_unary_connective"]
  131 -> 104 [style=dashed label="th1_unary_connective"]
  131 -> 105 [style=dashed label="atom"]
  131 -> 106 [style=dashed label="untyped_atom"]
  131 -> 107 [style=dashed label="constant"]
  131 -> 108 [style=dashed label="defined_term"]
  131 -> 109 [style=dashed label="binary_connective"]
  131 -> 110 [style=dashed label="assoc_connective"]
  132 [label="State 132\n\l 33 thf_binary_pair: thf_unitary_formula thf_pair_connective • thf_unitary_formula\l"]
  132 -> 133 [style=solid label="OPAREN"]
  132 -> 39 [style=solid label="OBRA"]
  132 -> 40 [style=solid label="OKEY"]
  132 -> 41 [style=solid label="EQUAL_COMB"]
  132 -> 42 [style=solid label="DESCRIPTION_COMB"]
  132 -> 43 [style=solid label="CHOICE_COMB"]
  132 -> 44 [style=solid label="EXISTS_COMB"]
  132 -> 45 [style=solid label="FORALL_COMB"]
  132 -> 46 [style=solid label="DESCRIPTION"]
  132 -> 47 [style=solid label="CHOICE"]
  132 -> 48 [style=solid label="LAMBDA"]
  132 -> 49 [style=solid label="EXISTS"]
  132 -> 50 [style=solid label="FORALL"]
  132 -> 51 [style=solid label="VLINE"]
  132 -> 52 [style=solid label="AND"]
  132 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  132 -> 54 [style=solid label="ASSIGNMENT"]
  132 -> 55 [style=solid label="IMPLIES"]
  132 -> 56 [style=solid label="IFF"]
  132 -> 57 [style=solid label="INFIX_EQUALITY"]
  132 -> 58 [style=solid label="INFIX_INEQUALITY"]
  132 -> 59 [style=solid label="NIFF"]
  132 -> 60 [style=solid label="NOR"]
  132 -> 61 [style=solid label="NAND"]
  132 -> 62 [style=solid label="TYPED_EXISTS"]
  132 -> 63 [style=solid label="TYPED_FORALL"]
  132 -> 64 [style=solid label="LET"]
  132 -> 65 [style=solid label="DOLLAR_COND"]
  132 -> 66 [style=solid label="VAR"]
  132 -> 67 [style=solid label="DOLLAR_WORD"]
  132 -> 68 [style=solid label="FUNCTOR"]
  132 -> 69 [style=solid label="DISTINCT_OBJECT"]
  132 -> 70 [style=solid label="NUMBER"]
  132 -> 165 [style=dashed label="thf_unitary_formula"]
  132 -> 80 [style=dashed label="thf_quantified_formula"]
  132 -> 81 [style=dashed label="thf_quantification"]
  132 -> 82 [style=dashed label="thf_unary_formula"]
  132 -> 135 [style=dashed label="thf_atom"]
  132 -> 84 [style=dashed label="thf_function"]
  132 -> 85 [style=dashed label="thf_conn_term"]
  132 -> 86 [style=dashed label="thf_conditional"]
  132 -> 87 [style=dashed label="thf_let"]
  132 -> 117 [style=dashed label="thf_tuple"]
  132 -> 98 [style=dashed label="thf_quantifier"]
  132 -> 99 [style=dashed label="fof_quantifier"]
  132 -> 100 [style=dashed label="th0_quantifier"]
  132 -> 101 [style=dashed label="th1_quantifier"]
  132 -> 102 [style=dashed label="thf_pair_connective"]
  132 -> 103 [style=dashed label="thf_unary_connective"]
  132 -> 104 [style=dashed label="th1_unary_connective"]
  132 -> 105 [style=dashed label="atom"]
  132 -> 106 [style=dashed label="untyped_atom"]
  132 -> 107 [style=dashed label="constant"]
  132 -> 108 [style=dashed label="defined_term"]
  132 -> 109 [style=dashed label="binary_connective"]
  132 -> 110 [style=dashed label="assoc_connective"]
  133 [label="State 133\n\l 49 thf_unitary_formula: OPAREN • thf_logic_formula CPAREN\l"]
  133 -> 114 [style=solid label="OPAREN"]
  133 -> 39 [style=solid label="OBRA"]
  133 -> 40 [style=solid label="OKEY"]
  133 -> 41 [style=solid label="EQUAL_COMB"]
  133 -> 42 [style=solid label="DESCRIPTION_COMB"]
  133 -> 43 [style=solid label="CHOICE_COMB"]
  133 -> 44 [style=solid label="EXISTS_COMB"]
  133 -> 45 [style=solid label="FORALL_COMB"]
  133 -> 46 [style=solid label="DESCRIPTION"]
  133 -> 47 [style=solid label="CHOICE"]
  133 -> 48 [style=solid label="LAMBDA"]
  133 -> 49 [style=solid label="EXISTS"]
  133 -> 50 [style=solid label="FORALL"]
  133 -> 51 [style=solid label="VLINE"]
  133 -> 52 [style=solid label="AND"]
  133 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  133 -> 54 [style=solid label="ASSIGNMENT"]
  133 -> 55 [style=solid label="IMPLIES"]
  133 -> 56 [style=solid label="IFF"]
  133 -> 57 [style=solid label="INFIX_EQUALITY"]
  133 -> 58 [style=solid label="INFIX_INEQUALITY"]
  133 -> 59 [style=solid label="NIFF"]
  133 -> 60 [style=solid label="NOR"]
  133 -> 61 [style=solid label="NAND"]
  133 -> 62 [style=solid label="TYPED_EXISTS"]
  133 -> 63 [style=solid label="TYPED_FORALL"]
  133 -> 64 [style=solid label="LET"]
  133 -> 65 [style=solid label="DOLLAR_COND"]
  133 -> 66 [style=solid label="VAR"]
  133 -> 67 [style=solid label="DOLLAR_WORD"]
  133 -> 68 [style=solid label="FUNCTOR"]
  133 -> 69 [style=solid label="DISTINCT_OBJECT"]
  133 -> 70 [style=solid label="NUMBER"]
  133 -> 166 [style=dashed label="thf_logic_formula"]
  133 -> 73 [style=dashed label="thf_binary_formula"]
  133 -> 74 [style=dashed label="thf_binary_pair"]
  133 -> 75 [style=dashed label="thf_binary_tuple"]
  133 -> 76 [style=dashed label="thf_or_formula"]
  133 -> 77 [style=dashed label="thf_and_formula"]
  133 -> 78 [style=dashed label="thf_apply_formula"]
  133 -> 79 [style=dashed label="thf_unitary_formula"]
  133 -> 80 [style=dashed label="thf_quantified_formula"]
  133 -> 81 [style=dashed label="thf_quantification"]
  133 -> 82 [style=dashed label="thf_unary_formula"]
  133 -> 83 [style=dashed label="thf_atom"]
  133 -> 84 [style=dashed label="thf_function"]
  133 -> 85 [style=dashed label="thf_conn_term"]
  133 -> 86 [style=dashed label="thf_conditional"]
  133 -> 87 [style=dashed label="thf_let"]
  133 -> 88 [style=dashed label="thf_type_formula"]
  133 -> 89 [style=dashed label="thf_typeable_formula"]
  133 -> 90 [style=dashed label="thf_subtype"]
  133 -> 91 [style=dashed label="thf_unitary_type"]
  133 -> 92 [style=dashed label="thf_binary_type"]
  133 -> 93 [style=dashed label="thf_mapping_type"]
  133 -> 94 [style=dashed label="thf_xprod_type"]
  133 -> 95 [style=dashed label="thf_union_type"]
  133 -> 117 [style=dashed label="thf_tuple"]
  133 -> 98 [style=dashed label="thf_quantifier"]
  133 -> 99 [style=dashed label="fof_quantifier"]
  133 -> 100 [style=dashed label="th0_quantifier"]
  133 -> 101 [style=dashed label="th1_quantifier"]
  133 -> 102 [style=dashed label="thf_pair_connective"]
  133 -> 103 [style=dashed label="thf_unary_connective"]
  133 -> 104 [style=dashed label="th1_unary_connective"]
  133 -> 105 [style=dashed label="atom"]
  133 -> 106 [style=dashed label="untyped_atom"]
  133 -> 107 [style=dashed label="constant"]
  133 -> 108 [style=dashed label="defined_term"]
  133 -> 109 [style=dashed label="binary_connective"]
  133 -> 110 [style=dashed label="assoc_connective"]
  134 [label="State 134\n\l 50 thf_quantified_formula: thf_quantification thf_unitary_formula •\l"]
  134 -> "134R50" [style=solid]
 "134R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 45 thf_unitary_formula: thf_atom •\l"]
  135 -> "135R45" [style=solid]
 "135R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 75 thf_subtype: thf_atom SUBTYPE_SIGN • thf_atom\l"]
  136 -> 41 [style=solid label="EQUAL_COMB"]
  136 -> 42 [style=solid label="DESCRIPTION_COMB"]
  136 -> 43 [style=solid label="CHOICE_COMB"]
  136 -> 44 [style=solid label="EXISTS_COMB"]
  136 -> 45 [style=solid label="FORALL_COMB"]
  136 -> 51 [style=solid label="VLINE"]
  136 -> 52 [style=solid label="AND"]
  136 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  136 -> 54 [style=solid label="ASSIGNMENT"]
  136 -> 55 [style=solid label="IMPLIES"]
  136 -> 56 [style=solid label="IFF"]
  136 -> 57 [style=solid label="INFIX_EQUALITY"]
  136 -> 58 [style=solid label="INFIX_INEQUALITY"]
  136 -> 59 [style=solid label="NIFF"]
  136 -> 60 [style=solid label="NOR"]
  136 -> 61 [style=solid label="NAND"]
  136 -> 66 [style=solid label="VAR"]
  136 -> 67 [style=solid label="DOLLAR_WORD"]
  136 -> 68 [style=solid label="FUNCTOR"]
  136 -> 69 [style=solid label="DISTINCT_OBJECT"]
  136 -> 70 [style=solid label="NUMBER"]
  136 -> 167 [style=dashed label="thf_atom"]
  136 -> 84 [style=dashed label="thf_function"]
  136 -> 85 [style=dashed label="thf_conn_term"]
  136 -> 102 [style=dashed label="thf_pair_connective"]
  136 -> 168 [style=dashed label="thf_unary_connective"]
  136 -> 104 [style=dashed label="th1_unary_connective"]
  136 -> 105 [style=dashed label="atom"]
  136 -> 106 [style=dashed label="untyped_atom"]
  136 -> 107 [style=dashed label="constant"]
  136 -> 108 [style=dashed label="defined_term"]
  136 -> 109 [style=dashed label="binary_connective"]
  136 -> 110 [style=dashed label="assoc_connective"]
  137 [label="State 137\n\l 72 thf_type_formula: thf_typeable_formula DDOT • thf_top_level_type\l"]
  137 -> 133 [style=solid label="OPAREN"]
  137 -> 39 [style=solid label="OBRA"]
  137 -> 40 [style=solid label="OKEY"]
  137 -> 41 [style=solid label="EQUAL_COMB"]
  137 -> 42 [style=solid label="DESCRIPTION_COMB"]
  137 -> 43 [style=solid label="CHOICE_COMB"]
  137 -> 44 [style=solid label="EXISTS_COMB"]
  137 -> 45 [style=solid label="FORALL_COMB"]
  137 -> 46 [style=solid label="DESCRIPTION"]
  137 -> 47 [style=solid label="CHOICE"]
  137 -> 48 [style=solid label="LAMBDA"]
  137 -> 49 [style=solid label="EXISTS"]
  137 -> 50 [style=solid label="FORALL"]
  137 -> 51 [style=solid label="VLINE"]
  137 -> 52 [style=solid label="AND"]
  137 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  137 -> 54 [style=solid label="ASSIGNMENT"]
  137 -> 55 [style=solid label="IMPLIES"]
  137 -> 56 [style=solid label="IFF"]
  137 -> 57 [style=solid label="INFIX_EQUALITY"]
  137 -> 58 [style=solid label="INFIX_INEQUALITY"]
  137 -> 59 [style=solid label="NIFF"]
  137 -> 60 [style=solid label="NOR"]
  137 -> 61 [style=solid label="NAND"]
  137 -> 62 [style=solid label="TYPED_EXISTS"]
  137 -> 63 [style=solid label="TYPED_FORALL"]
  137 -> 64 [style=solid label="LET"]
  137 -> 65 [style=solid label="DOLLAR_COND"]
  137 -> 66 [style=solid label="VAR"]
  137 -> 67 [style=solid label="DOLLAR_WORD"]
  137 -> 68 [style=solid label="FUNCTOR"]
  137 -> 69 [style=solid label="DISTINCT_OBJECT"]
  137 -> 70 [style=solid label="NUMBER"]
  137 -> 169 [style=dashed label="thf_apply_formula"]
  137 -> 170 [style=dashed label="thf_unitary_formula"]
  137 -> 80 [style=dashed label="thf_quantified_formula"]
  137 -> 81 [style=dashed label="thf_quantification"]
  137 -> 82 [style=dashed label="thf_unary_formula"]
  137 -> 135 [style=dashed label="thf_atom"]
  137 -> 84 [style=dashed label="thf_function"]
  137 -> 85 [style=dashed label="thf_conn_term"]
  137 -> 86 [style=dashed label="thf_conditional"]
  137 -> 87 [style=dashed label="thf_let"]
  137 -> 171 [style=dashed label="thf_top_level_type"]
  137 -> 172 [style=dashed label="thf_unitary_type"]
  137 -> 173 [style=dashed label="thf_apply_type"]
  137 -> 174 [style=dashed label="thf_mapping_type"]
  137 -> 117 [style=dashed label="thf_tuple"]
  137 -> 98 [style=dashed label="thf_quantifier"]
  137 -> 99 [style=dashed label="fof_quantifier"]
  137 -> 100 [style=dashed label="th0_quantifier"]
  137 -> 101 [style=dashed label="th1_quantifier"]
  137 -> 102 [style=dashed label="thf_pair_connective"]
  137 -> 103 [style=dashed label="thf_unary_connective"]
  137 -> 104 [style=dashed label="th1_unary_connective"]
  137 -> 105 [style=dashed label="atom"]
  137 -> 106 [style=dashed label="untyped_atom"]
  137 -> 107 [style=dashed label="constant"]
  137 -> 108 [style=dashed label="defined_term"]
  137 -> 109 [style=dashed label="binary_connective"]
  137 -> 110 [style=dashed label="assoc_connective"]
  138 [label="State 138\n\l 84 thf_mapping_type: thf_unitary_type ARROW • thf_unitary_type\l 85                 | thf_unitary_type ARROW • thf_mapping_type\l"]
  138 -> 133 [style=solid label="OPAREN"]
  138 -> 39 [style=solid label="OBRA"]
  138 -> 40 [style=solid label="OKEY"]
  138 -> 41 [style=solid label="EQUAL_COMB"]
  138 -> 42 [style=solid label="DESCRIPTION_COMB"]
  138 -> 43 [style=solid label="CHOICE_COMB"]
  138 -> 44 [style=solid label="EXISTS_COMB"]
  138 -> 45 [style=solid label="FORALL_COMB"]
  138 -> 46 [style=solid label="DESCRIPTION"]
  138 -> 47 [style=solid label="CHOICE"]
  138 -> 48 [style=solid label="LAMBDA"]
  138 -> 49 [style=solid label="EXISTS"]
  138 -> 50 [style=solid label="FORALL"]
  138 -> 51 [style=solid label="VLINE"]
  138 -> 52 [style=solid label="AND"]
  138 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  138 -> 54 [style=solid label="ASSIGNMENT"]
  138 -> 55 [style=solid label="IMPLIES"]
  138 -> 56 [style=solid label="IFF"]
  138 -> 57 [style=solid label="INFIX_EQUALITY"]
  138 -> 58 [style=solid label="INFIX_INEQUALITY"]
  138 -> 59 [style=solid label="NIFF"]
  138 -> 60 [style=solid label="NOR"]
  138 -> 61 [style=solid label="NAND"]
  138 -> 62 [style=solid label="TYPED_EXISTS"]
  138 -> 63 [style=solid label="TYPED_FORALL"]
  138 -> 64 [style=solid label="LET"]
  138 -> 65 [style=solid label="DOLLAR_COND"]
  138 -> 66 [style=solid label="VAR"]
  138 -> 67 [style=solid label="DOLLAR_WORD"]
  138 -> 68 [style=solid label="FUNCTOR"]
  138 -> 69 [style=solid label="DISTINCT_OBJECT"]
  138 -> 70 [style=solid label="NUMBER"]
  138 -> 175 [style=dashed label="thf_unitary_formula"]
  138 -> 80 [style=dashed label="thf_quantified_formula"]
  138 -> 81 [style=dashed label="thf_quantification"]
  138 -> 82 [style=dashed label="thf_unary_formula"]
  138 -> 135 [style=dashed label="thf_atom"]
  138 -> 84 [style=dashed label="thf_function"]
  138 -> 85 [style=dashed label="thf_conn_term"]
  138 -> 86 [style=dashed label="thf_conditional"]
  138 -> 87 [style=dashed label="thf_let"]
  138 -> 176 [style=dashed label="thf_unitary_type"]
  138 -> 177 [style=dashed label="thf_mapping_type"]
  138 -> 117 [style=dashed label="thf_tuple"]
  138 -> 98 [style=dashed label="thf_quantifier"]
  138 -> 99 [style=dashed label="fof_quantifier"]
  138 -> 100 [style=dashed label="th0_quantifier"]
  138 -> 101 [style=dashed label="th1_quantifier"]
  138 -> 102 [style=dashed label="thf_pair_connective"]
  138 -> 103 [style=dashed label="thf_unary_connective"]
  138 -> 104 [style=dashed label="th1_unary_connective"]
  138 -> 105 [style=dashed label="atom"]
  138 -> 106 [style=dashed label="untyped_atom"]
  138 -> 107 [style=dashed label="constant"]
  138 -> 108 [style=dashed label="defined_term"]
  138 -> 109 [style=dashed label="binary_connective"]
  138 -> 110 [style=dashed label="assoc_connective"]
  139 [label="State 139\n\l 88 thf_union_type: thf_unitary_type PLUS • thf_unitary_type\l"]
  139 -> 133 [style=solid label="OPAREN"]
  139 -> 39 [style=solid label="OBRA"]
  139 -> 40 [style=solid label="OKEY"]
  139 -> 41 [style=solid label="EQUAL_COMB"]
  139 -> 42 [style=solid label="DESCRIPTION_COMB"]
  139 -> 43 [style=solid label="CHOICE_COMB"]
  139 -> 44 [style=solid label="EXISTS_COMB"]
  139 -> 45 [style=solid label="FORALL_COMB"]
  139 -> 46 [style=solid label="DESCRIPTION"]
  139 -> 47 [style=solid label="CHOICE"]
  139 -> 48 [style=solid label="LAMBDA"]
  139 -> 49 [style=solid label="EXISTS"]
  139 -> 50 [style=solid label="FORALL"]
  139 -> 51 [style=solid label="VLINE"]
  139 -> 52 [style=solid label="AND"]
  139 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  139 -> 54 [style=solid label="ASSIGNMENT"]
  139 -> 55 [style=solid label="IMPLIES"]
  139 -> 56 [style=solid label="IFF"]
  139 -> 57 [style=solid label="INFIX_EQUALITY"]
  139 -> 58 [style=solid label="INFIX_INEQUALITY"]
  139 -> 59 [style=solid label="NIFF"]
  139 -> 60 [style=solid label="NOR"]
  139 -> 61 [style=solid label="NAND"]
  139 -> 62 [style=solid label="TYPED_EXISTS"]
  139 -> 63 [style=solid label="TYPED_FORALL"]
  139 -> 64 [style=solid label="LET"]
  139 -> 65 [style=solid label="DOLLAR_COND"]
  139 -> 66 [style=solid label="VAR"]
  139 -> 67 [style=solid label="DOLLAR_WORD"]
  139 -> 68 [style=solid label="FUNCTOR"]
  139 -> 69 [style=solid label="DISTINCT_OBJECT"]
  139 -> 70 [style=solid label="NUMBER"]
  139 -> 175 [style=dashed label="thf_unitary_formula"]
  139 -> 80 [style=dashed label="thf_quantified_formula"]
  139 -> 81 [style=dashed label="thf_quantification"]
  139 -> 82 [style=dashed label="thf_unary_formula"]
  139 -> 135 [style=dashed label="thf_atom"]
  139 -> 84 [style=dashed label="thf_function"]
  139 -> 85 [style=dashed label="thf_conn_term"]
  139 -> 86 [style=dashed label="thf_conditional"]
  139 -> 87 [style=dashed label="thf_let"]
  139 -> 178 [style=dashed label="thf_unitary_type"]
  139 -> 117 [style=dashed label="thf_tuple"]
  139 -> 98 [style=dashed label="thf_quantifier"]
  139 -> 99 [style=dashed label="fof_quantifier"]
  139 -> 100 [style=dashed label="th0_quantifier"]
  139 -> 101 [style=dashed label="th1_quantifier"]
  139 -> 102 [style=dashed label="thf_pair_connective"]
  139 -> 103 [style=dashed label="thf_unary_connective"]
  139 -> 104 [style=dashed label="th1_unary_connective"]
  139 -> 105 [style=dashed label="atom"]
  139 -> 106 [style=dashed label="untyped_atom"]
  139 -> 107 [style=dashed label="constant"]
  139 -> 108 [style=dashed label="defined_term"]
  139 -> 109 [style=dashed label="binary_connective"]
  139 -> 110 [style=dashed label="assoc_connective"]
  140 [label="State 140\n\l 86 thf_xprod_type: thf_unitary_type STAR • thf_unitary_type\l"]
  140 -> 133 [style=solid label="OPAREN"]
  140 -> 39 [style=solid label="OBRA"]
  140 -> 40 [style=solid label="OKEY"]
  140 -> 41 [style=solid label="EQUAL_COMB"]
  140 -> 42 [style=solid label="DESCRIPTION_COMB"]
  140 -> 43 [style=solid label="CHOICE_COMB"]
  140 -> 44 [style=solid label="EXISTS_COMB"]
  140 -> 45 [style=solid label="FORALL_COMB"]
  140 -> 46 [style=solid label="DESCRIPTION"]
  140 -> 47 [style=solid label="CHOICE"]
  140 -> 48 [style=solid label="LAMBDA"]
  140 -> 49 [style=solid label="EXISTS"]
  140 -> 50 [style=solid label="FORALL"]
  140 -> 51 [style=solid label="VLINE"]
  140 -> 52 [style=solid label="AND"]
  140 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  140 -> 54 [style=solid label="ASSIGNMENT"]
  140 -> 55 [style=solid label="IMPLIES"]
  140 -> 56 [style=solid label="IFF"]
  140 -> 57 [style=solid label="INFIX_EQUALITY"]
  140 -> 58 [style=solid label="INFIX_INEQUALITY"]
  140 -> 59 [style=solid label="NIFF"]
  140 -> 60 [style=solid label="NOR"]
  140 -> 61 [style=solid label="NAND"]
  140 -> 62 [style=solid label="TYPED_EXISTS"]
  140 -> 63 [style=solid label="TYPED_FORALL"]
  140 -> 64 [style=solid label="LET"]
  140 -> 65 [style=solid label="DOLLAR_COND"]
  140 -> 66 [style=solid label="VAR"]
  140 -> 67 [style=solid label="DOLLAR_WORD"]
  140 -> 68 [style=solid label="FUNCTOR"]
  140 -> 69 [style=solid label="DISTINCT_OBJECT"]
  140 -> 70 [style=solid label="NUMBER"]
  140 -> 175 [style=dashed label="thf_unitary_formula"]
  140 -> 80 [style=dashed label="thf_quantified_formula"]
  140 -> 81 [style=dashed label="thf_quantification"]
  140 -> 82 [style=dashed label="thf_unary_formula"]
  140 -> 135 [style=dashed label="thf_atom"]
  140 -> 84 [style=dashed label="thf_function"]
  140 -> 85 [style=dashed label="thf_conn_term"]
  140 -> 86 [style=dashed label="thf_conditional"]
  140 -> 87 [style=dashed label="thf_let"]
  140 -> 179 [style=dashed label="thf_unitary_type"]
  140 -> 117 [style=dashed label="thf_tuple"]
  140 -> 98 [style=dashed label="thf_quantifier"]
  140 -> 99 [style=dashed label="fof_quantifier"]
  140 -> 100 [style=dashed label="th0_quantifier"]
  140 -> 101 [style=dashed label="th1_quantifier"]
  140 -> 102 [style=dashed label="thf_pair_connective"]
  140 -> 103 [style=dashed label="thf_unary_connective"]
  140 -> 104 [style=dashed label="th1_unary_connective"]
  140 -> 105 [style=dashed label="atom"]
  140 -> 106 [style=dashed label="untyped_atom"]
  140 -> 107 [style=dashed label="constant"]
  140 -> 108 [style=dashed label="defined_term"]
  140 -> 109 [style=dashed label="binary_connective"]
  140 -> 110 [style=dashed label="assoc_connective"]
  141 [label="State 141\n\l 87 thf_xprod_type: thf_xprod_type STAR • thf_unitary_type\l"]
  141 -> 133 [style=solid label="OPAREN"]
  141 -> 39 [style=solid label="OBRA"]
  141 -> 40 [style=solid label="OKEY"]
  141 -> 41 [style=solid label="EQUAL_COMB"]
  141 -> 42 [style=solid label="DESCRIPTION_COMB"]
  141 -> 43 [style=solid label="CHOICE_COMB"]
  141 -> 44 [style=solid label="EXISTS_COMB"]
  141 -> 45 [style=solid label="FORALL_COMB"]
  141 -> 46 [style=solid label="DESCRIPTION"]
  141 -> 47 [style=solid label="CHOICE"]
  141 -> 48 [style=solid label="LAMBDA"]
  141 -> 49 [style=solid label="EXISTS"]
  141 -> 50 [style=solid label="FORALL"]
  141 -> 51 [style=solid label="VLINE"]
  141 -> 52 [style=solid label="AND"]
  141 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  141 -> 54 [style=solid label="ASSIGNMENT"]
  141 -> 55 [style=solid label="IMPLIES"]
  141 -> 56 [style=solid label="IFF"]
  141 -> 57 [style=solid label="INFIX_EQUALITY"]
  141 -> 58 [style=solid label="INFIX_INEQUALITY"]
  141 -> 59 [style=solid label="NIFF"]
  141 -> 60 [style=solid label="NOR"]
  141 -> 61 [style=solid label="NAND"]
  141 -> 62 [style=solid label="TYPED_EXISTS"]
  141 -> 63 [style=solid label="TYPED_FORALL"]
  141 -> 64 [style=solid label="LET"]
  141 -> 65 [style=solid label="DOLLAR_COND"]
  141 -> 66 [style=solid label="VAR"]
  141 -> 67 [style=solid label="DOLLAR_WORD"]
  141 -> 68 [style=solid label="FUNCTOR"]
  141 -> 69 [style=solid label="DISTINCT_OBJECT"]
  141 -> 70 [style=solid label="NUMBER"]
  141 -> 175 [style=dashed label="thf_unitary_formula"]
  141 -> 80 [style=dashed label="thf_quantified_formula"]
  141 -> 81 [style=dashed label="thf_quantification"]
  141 -> 82 [style=dashed label="thf_unary_formula"]
  141 -> 135 [style=dashed label="thf_atom"]
  141 -> 84 [style=dashed label="thf_function"]
  141 -> 85 [style=dashed label="thf_conn_term"]
  141 -> 86 [style=dashed label="thf_conditional"]
  141 -> 87 [style=dashed label="thf_let"]
  141 -> 180 [style=dashed label="thf_unitary_type"]
  141 -> 117 [style=dashed label="thf_tuple"]
  141 -> 98 [style=dashed label="thf_quantifier"]
  141 -> 99 [style=dashed label="fof_quantifier"]
  141 -> 100 [style=dashed label="th0_quantifier"]
  141 -> 101 [style=dashed label="th1_quantifier"]
  141 -> 102 [style=dashed label="thf_pair_connective"]
  141 -> 103 [style=dashed label="thf_unary_connective"]
  141 -> 104 [style=dashed label="th1_unary_connective"]
  141 -> 105 [style=dashed label="atom"]
  141 -> 106 [style=dashed label="untyped_atom"]
  141 -> 107 [style=dashed label="constant"]
  141 -> 108 [style=dashed label="defined_term"]
  141 -> 109 [style=dashed label="binary_connective"]
  141 -> 110 [style=dashed label="assoc_connective"]
  142 [label="State 142\n\l 89 thf_union_type: thf_union_type PLUS • thf_unitary_type\l"]
  142 -> 133 [style=solid label="OPAREN"]
  142 -> 39 [style=solid label="OBRA"]
  142 -> 40 [style=solid label="OKEY"]
  142 -> 41 [style=solid label="EQUAL_COMB"]
  142 -> 42 [style=solid label="DESCRIPTION_COMB"]
  142 -> 43 [style=solid label="CHOICE_COMB"]
  142 -> 44 [style=solid label="EXISTS_COMB"]
  142 -> 45 [style=solid label="FORALL_COMB"]
  142 -> 46 [style=solid label="DESCRIPTION"]
  142 -> 47 [style=solid label="CHOICE"]
  142 -> 48 [style=solid label="LAMBDA"]
  142 -> 49 [style=solid label="EXISTS"]
  142 -> 50 [style=solid label="FORALL"]
  142 -> 51 [style=solid label="VLINE"]
  142 -> 52 [style=solid label="AND"]
  142 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  142 -> 54 [style=solid label="ASSIGNMENT"]
  142 -> 55 [style=solid label="IMPLIES"]
  142 -> 56 [style=solid label="IFF"]
  142 -> 57 [style=solid label="INFIX_EQUALITY"]
  142 -> 58 [style=solid label="INFIX_INEQUALITY"]
  142 -> 59 [style=solid label="NIFF"]
  142 -> 60 [style=solid label="NOR"]
  142 -> 61 [style=solid label="NAND"]
  142 -> 62 [style=solid label="TYPED_EXISTS"]
  142 -> 63 [style=solid label="TYPED_FORALL"]
  142 -> 64 [style=solid label="LET"]
  142 -> 65 [style=solid label="DOLLAR_COND"]
  142 -> 66 [style=solid label="VAR"]
  142 -> 67 [style=solid label="DOLLAR_WORD"]
  142 -> 68 [style=solid label="FUNCTOR"]
  142 -> 69 [style=solid label="DISTINCT_OBJECT"]
  142 -> 70 [style=solid label="NUMBER"]
  142 -> 175 [style=dashed label="thf_unitary_formula"]
  142 -> 80 [style=dashed label="thf_quantified_formula"]
  142 -> 81 [style=dashed label="thf_quantification"]
  142 -> 82 [style=dashed label="thf_unary_formula"]
  142 -> 135 [style=dashed label="thf_atom"]
  142 -> 84 [style=dashed label="thf_function"]
  142 -> 85 [style=dashed label="thf_conn_term"]
  142 -> 86 [style=dashed label="thf_conditional"]
  142 -> 87 [style=dashed label="thf_let"]
  142 -> 181 [style=dashed label="thf_unitary_type"]
  142 -> 117 [style=dashed label="thf_tuple"]
  142 -> 98 [style=dashed label="thf_quantifier"]
  142 -> 99 [style=dashed label="fof_quantifier"]
  142 -> 100 [style=dashed label="th0_quantifier"]
  142 -> 101 [style=dashed label="th1_quantifier"]
  142 -> 102 [style=dashed label="thf_pair_connective"]
  142 -> 103 [style=dashed label="thf_unary_connective"]
  142 -> 104 [style=dashed label="th1_unary_connective"]
  142 -> 105 [style=dashed label="atom"]
  142 -> 106 [style=dashed label="untyped_atom"]
  142 -> 107 [style=dashed label="constant"]
  142 -> 108 [style=dashed label="defined_term"]
  142 -> 109 [style=dashed label="binary_connective"]
  142 -> 110 [style=dashed label="assoc_connective"]
  143 [label="State 143\n\l 90 thf_sequent: thf_tuple GENTZ_ARROW • thf_tuple\l"]
  143 -> 39 [style=solid label="OBRA"]
  143 -> 40 [style=solid label="OKEY"]
  143 -> 182 [style=dashed label="thf_tuple"]
  144 [label="State 144\n\l 51 thf_quantification: thf_quantifier OBRA • thf_variable_list CBRA DDOT\l"]
  144 -> 183 [style=solid label="VAR"]
  144 -> 184 [style=dashed label="thf_variable_list"]
  144 -> 185 [style=dashed label="thf_variable"]
  144 -> 186 [style=dashed label="thf_typed_variable"]
  145 [label="State 145\n\l 57 thf_unary_formula: thf_unary_connective OPAREN • thf_logic_formula CPAREN\l"]
  145 -> 114 [style=solid label="OPAREN"]
  145 -> 39 [style=solid label="OBRA"]
  145 -> 40 [style=solid label="OKEY"]
  145 -> 41 [style=solid label="EQUAL_COMB"]
  145 -> 42 [style=solid label="DESCRIPTION_COMB"]
  145 -> 43 [style=solid label="CHOICE_COMB"]
  145 -> 44 [style=solid label="EXISTS_COMB"]
  145 -> 45 [style=solid label="FORALL_COMB"]
  145 -> 46 [style=solid label="DESCRIPTION"]
  145 -> 47 [style=solid label="CHOICE"]
  145 -> 48 [style=solid label="LAMBDA"]
  145 -> 49 [style=solid label="EXISTS"]
  145 -> 50 [style=solid label="FORALL"]
  145 -> 51 [style=solid label="VLINE"]
  145 -> 52 [style=solid label="AND"]
  145 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  145 -> 54 [style=solid label="ASSIGNMENT"]
  145 -> 55 [style=solid label="IMPLIES"]
  145 -> 56 [style=solid label="IFF"]
  145 -> 57 [style=solid label="INFIX_EQUALITY"]
  145 -> 58 [style=solid label="INFIX_INEQUALITY"]
  145 -> 59 [style=solid label="NIFF"]
  145 -> 60 [style=solid label="NOR"]
  145 -> 61 [style=solid label="NAND"]
  145 -> 62 [style=solid label="TYPED_EXISTS"]
  145 -> 63 [style=solid label="TYPED_FORALL"]
  145 -> 64 [style=solid label="LET"]
  145 -> 65 [style=solid label="DOLLAR_COND"]
  145 -> 66 [style=solid label="VAR"]
  145 -> 67 [style=solid label="DOLLAR_WORD"]
  145 -> 68 [style=solid label="FUNCTOR"]
  145 -> 69 [style=solid label="DISTINCT_OBJECT"]
  145 -> 70 [style=solid label="NUMBER"]
  145 -> 187 [style=dashed label="thf_logic_formula"]
  145 -> 73 [style=dashed label="thf_binary_formula"]
  145 -> 74 [style=dashed label="thf_binary_pair"]
  145 -> 75 [style=dashed label="thf_binary_tuple"]
  145 -> 76 [style=dashed label="thf_or_formula"]
  145 -> 77 [style=dashed label="thf_and_formula"]
  145 -> 78 [style=dashed label="thf_apply_formula"]
  145 -> 79 [style=dashed label="thf_unitary_formula"]
  145 -> 80 [style=dashed label="thf_quantified_formula"]
  145 -> 81 [style=dashed label="thf_quantification"]
  145 -> 82 [style=dashed label="thf_unary_formula"]
  145 -> 83 [style=dashed label="thf_atom"]
  145 -> 84 [style=dashed label="thf_function"]
  145 -> 85 [style=dashed label="thf_conn_term"]
  145 -> 86 [style=dashed label="thf_conditional"]
  145 -> 87 [style=dashed label="thf_let"]
  145 -> 88 [style=dashed label="thf_type_formula"]
  145 -> 89 [style=dashed label="thf_typeable_formula"]
  145 -> 90 [style=dashed label="thf_subtype"]
  145 -> 91 [style=dashed label="thf_unitary_type"]
  145 -> 92 [style=dashed label="thf_binary_type"]
  145 -> 93 [style=dashed label="thf_mapping_type"]
  145 -> 94 [style=dashed label="thf_xprod_type"]
  145 -> 95 [style=dashed label="thf_union_type"]
  145 -> 117 [style=dashed label="thf_tuple"]
  145 -> 98 [style=dashed label="thf_quantifier"]
  145 -> 99 [style=dashed label="fof_quantifier"]
  145 -> 100 [style=dashed label="th0_quantifier"]
  145 -> 101 [style=dashed label="th1_quantifier"]
  145 -> 102 [style=dashed label="thf_pair_connective"]
  145 -> 103 [style=dashed label="thf_unary_connective"]
  145 -> 104 [style=dashed label="th1_unary_connective"]
  145 -> 105 [style=dashed label="atom"]
  145 -> 106 [style=dashed label="untyped_atom"]
  145 -> 107 [style=dashed label="constant"]
  145 -> 108 [style=dashed label="defined_term"]
  145 -> 109 [style=dashed label="binary_connective"]
  145 -> 110 [style=dashed label="assoc_connective"]
  146 [label="State 146\n\l 58 thf_unary_formula: thf_unary_connective VAR •\l"]
  146 -> "146R58" [style=solid]
 "146R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA type COMMA thf_formula CPAREN • DOT\l"]
  147 -> 188 [style=solid label="DOT"]
  148 [label="State 148\n\l 49 thf_unitary_formula: OPAREN thf_logic_formula CPAREN •\l 74 thf_typeable_formula: OPAREN thf_logic_formula CPAREN •\l"]
  148 -> "148R49" [style=solid]
 "148R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  148 -> "148R74" [label="[DDOT]", style=solid]
 "148R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 91 thf_sequent: OPAREN thf_sequent CPAREN •\l"]
  149 -> "149R91" [style=solid]
 "149R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 97 thf_formula_list: thf_logic_formula COMMA • thf_formula_list\l"]
  150 -> 114 [style=solid label="OPAREN"]
  150 -> 39 [style=solid label="OBRA"]
  150 -> 40 [style=solid label="OKEY"]
  150 -> 41 [style=solid label="EQUAL_COMB"]
  150 -> 42 [style=solid label="DESCRIPTION_COMB"]
  150 -> 43 [style=solid label="CHOICE_COMB"]
  150 -> 44 [style=solid label="EXISTS_COMB"]
  150 -> 45 [style=solid label="FORALL_COMB"]
  150 -> 46 [style=solid label="DESCRIPTION"]
  150 -> 47 [style=solid label="CHOICE"]
  150 -> 48 [style=solid label="LAMBDA"]
  150 -> 49 [style=solid label="EXISTS"]
  150 -> 50 [style=solid label="FORALL"]
  150 -> 51 [style=solid label="VLINE"]
  150 -> 52 [style=solid label="AND"]
  150 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  150 -> 54 [style=solid label="ASSIGNMENT"]
  150 -> 55 [style=solid label="IMPLIES"]
  150 -> 56 [style=solid label="IFF"]
  150 -> 57 [style=solid label="INFIX_EQUALITY"]
  150 -> 58 [style=solid label="INFIX_INEQUALITY"]
  150 -> 59 [style=solid label="NIFF"]
  150 -> 60 [style=solid label="NOR"]
  150 -> 61 [style=solid label="NAND"]
  150 -> 62 [style=solid label="TYPED_EXISTS"]
  150 -> 63 [style=solid label="TYPED_FORALL"]
  150 -> 64 [style=solid label="LET"]
  150 -> 65 [style=solid label="DOLLAR_COND"]
  150 -> 66 [style=solid label="VAR"]
  150 -> 67 [style=solid label="DOLLAR_WORD"]
  150 -> 68 [style=solid label="FUNCTOR"]
  150 -> 69 [style=solid label="DISTINCT_OBJECT"]
  150 -> 70 [style=solid label="NUMBER"]
  150 -> 116 [style=dashed label="thf_logic_formula"]
  150 -> 73 [style=dashed label="thf_binary_formula"]
  150 -> 74 [style=dashed label="thf_binary_pair"]
  150 -> 75 [style=dashed label="thf_binary_tuple"]
  150 -> 76 [style=dashed label="thf_or_formula"]
  150 -> 77 [style=dashed label="thf_and_formula"]
  150 -> 78 [style=dashed label="thf_apply_formula"]
  150 -> 79 [style=dashed label="thf_unitary_formula"]
  150 -> 80 [style=dashed label="thf_quantified_formula"]
  150 -> 81 [style=dashed label="thf_quantification"]
  150 -> 82 [style=dashed label="thf_unary_formula"]
  150 -> 83 [style=dashed label="thf_atom"]
  150 -> 84 [style=dashed label="thf_function"]
  150 -> 85 [style=dashed label="thf_conn_term"]
  150 -> 86 [style=dashed label="thf_conditional"]
  150 -> 87 [style=dashed label="thf_let"]
  150 -> 88 [style=dashed label="thf_type_formula"]
  150 -> 89 [style=dashed label="thf_typeable_formula"]
  150 -> 90 [style=dashed label="thf_subtype"]
  150 -> 91 [style=dashed label="thf_unitary_type"]
  150 -> 92 [style=dashed label="thf_binary_type"]
  150 -> 93 [style=dashed label="thf_mapping_type"]
  150 -> 94 [style=dashed label="thf_xprod_type"]
  150 -> 95 [style=dashed label="thf_union_type"]
  150 -> 117 [style=dashed label="thf_tuple"]
  150 -> 189 [style=dashed label="thf_formula_list"]
  150 -> 98 [style=dashed label="thf_quantifier"]
  150 -> 99 [style=dashed label="fof_quantifier"]
  150 -> 100 [style=dashed label="th0_quantifier"]
  150 -> 101 [style=dashed label="th1_quantifier"]
  150 -> 102 [style=dashed label="thf_pair_connective"]
  150 -> 103 [style=dashed label="thf_unary_connective"]
  150 -> 104 [style=dashed label="th1_unary_connective"]
  150 -> 105 [style=dashed label="atom"]
  150 -> 106 [style=dashed label="untyped_atom"]
  150 -> 107 [style=dashed label="constant"]
  150 -> 108 [style=dashed label="defined_term"]
  150 -> 109 [style=dashed label="binary_connective"]
  150 -> 110 [style=dashed label="assoc_connective"]
  151 [label="State 151\n\l 93 thf_tuple: OBRA thf_formula_list CBRA •\l"]
  151 -> "151R93" [style=solid]
 "151R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 95 thf_tuple: OKEY thf_formula_list CKEY •\l"]
  152 -> "152R95" [style=solid]
 "152R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 70 thf_let: LET OPAREN thf_unitary_formula • COMMA thf_formula CPAREN\l"]
  153 -> 190 [style=solid label="COMMA"]
  154 [label="State 154\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula • COMMA thf_logic_formula COMMA thf_logic_formula CPAREN\l"]
  154 -> 191 [style=solid label="COMMA"]
  155 [label="State 155\n\l 65 thf_function: DOLLAR_WORD OPAREN thf_arguments • CPAREN\l"]
  155 -> 192 [style=solid label="CPAREN"]
  156 [label="State 156\n\l 71 thf_arguments: thf_formula_list •\l"]
  156 -> "156R71" [style=solid]
 "156R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 64 thf_function: FUNCTOR OPAREN thf_arguments • CPAREN\l"]
  157 -> 193 [style=solid label="CPAREN"]
  158 [label="State 158\n\l 11 thf_annotated: THF OPAREN FUNCTOR COMMA type COMMA thf_formula CPAREN DOT •\l"]
  158 -> "158R11" [style=solid]
 "158R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 38 thf_or_formula: thf_or_formula VLINE thf_unitary_formula •\l"]
  159 -> "159R38" [style=solid]
 "159R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 40 thf_and_formula: thf_and_formula AND thf_unitary_formula •\l"]
  160 -> "160R40" [style=solid]
 "160R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 42 thf_apply_formula: thf_apply_formula APPLICATION thf_unitary_formula •\l"]
  161 -> "161R42" [style=solid]
 "161R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 37 thf_or_formula: thf_unitary_formula VLINE thf_unitary_formula •\l"]
  162 -> "162R37" [style=solid]
 "162R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 39 thf_and_formula: thf_unitary_formula AND thf_unitary_formula •\l"]
  163 -> "163R39" [style=solid]
 "163R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 41 thf_apply_formula: thf_unitary_formula APPLICATION thf_unitary_formula •\l"]
  164 -> "164R41" [style=solid]
 "164R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 33 thf_binary_pair: thf_unitary_formula thf_pair_connective thf_unitary_formula •\l"]
  165 -> "165R33" [style=solid]
 "165R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 49 thf_unitary_formula: OPAREN thf_logic_formula • CPAREN\l"]
  166 -> 194 [style=solid label="CPAREN"]
  167 [label="State 167\n\l 75 thf_subtype: thf_atom SUBTYPE_SIGN thf_atom •\l"]
  167 -> "167R75" [style=solid]
 "167R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 68 thf_conn_term: thf_unary_connective •\l"]
  168 -> "168R68" [style=solid]
 "168R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 42 thf_apply_formula: thf_apply_formula • APPLICATION thf_unitary_formula\l 80 thf_apply_type: thf_apply_formula •\l"]
  169 -> 128 [style=solid label="APPLICATION"]
  169 -> "169R80" [style=solid]
 "169R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 41 thf_apply_formula: thf_unitary_formula • APPLICATION thf_unitary_formula\l 79 thf_unitary_type: thf_unitary_formula •\l"]
  170 -> 131 [style=solid label="APPLICATION"]
  170 -> "170R79" [style=solid]
 "170R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 72 thf_type_formula: thf_typeable_formula DDOT thf_top_level_type •\l"]
  171 -> "171R72" [style=solid]
 "171R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 76 thf_top_level_type: thf_unitary_type •\l 84 thf_mapping_type: thf_unitary_type • ARROW thf_unitary_type\l 85                 | thf_unitary_type • ARROW thf_mapping_type\l"]
  172 -> 138 [style=solid label="ARROW"]
  172 -> "172R76" [style=solid]
 "172R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 78 thf_top_level_type: thf_apply_type •\l"]
  173 -> "173R78" [style=solid]
 "173R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l 77 thf_top_level_type: thf_mapping_type •\l"]
  174 -> "174R77" [style=solid]
 "174R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 79 thf_unitary_type: thf_unitary_formula •\l"]
  175 -> "175R79" [style=solid]
 "175R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 84 thf_mapping_type: thf_unitary_type • ARROW thf_unitary_type\l 84                 | thf_unitary_type ARROW thf_unitary_type •\l 85                 | thf_unitary_type • ARROW thf_mapping_type\l"]
  176 -> 138 [style=solid label="ARROW"]
  176 -> "176R84" [style=solid]
 "176R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 85 thf_mapping_type: thf_unitary_type ARROW thf_mapping_type •\l"]
  177 -> "177R85" [style=solid]
 "177R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 88 thf_union_type: thf_unitary_type PLUS thf_unitary_type •\l"]
  178 -> "178R88" [style=solid]
 "178R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l 86 thf_xprod_type: thf_unitary_type STAR thf_unitary_type •\l"]
  179 -> "179R86" [style=solid]
 "179R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l 87 thf_xprod_type: thf_xprod_type STAR thf_unitary_type •\l"]
  180 -> "180R87" [style=solid]
 "180R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 89 thf_union_type: thf_union_type PLUS thf_unitary_type •\l"]
  181 -> "181R89" [style=solid]
 "181R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 90 thf_sequent: thf_tuple GENTZ_ARROW thf_tuple •\l"]
  182 -> "182R90" [style=solid]
 "182R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 55 thf_variable: VAR •\l 56 thf_typed_variable: VAR • DDOT thf_top_level_type\l"]
  183 -> 195 [style=solid label="DDOT"]
  183 -> "183R55" [style=solid]
 "183R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l 51 thf_quantification: thf_quantifier OBRA thf_variable_list • CBRA DDOT\l"]
  184 -> 196 [style=solid label="CBRA"]
  185 [label="State 185\n\l 52 thf_variable_list: thf_variable • COMMA thf_variable_list\l 53                  | thf_variable •\l"]
  185 -> 197 [style=solid label="COMMA"]
  185 -> "185R53" [style=solid]
 "185R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l 54 thf_variable: thf_typed_variable •\l"]
  186 -> "186R54" [style=solid]
 "186R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 57 thf_unary_formula: thf_unary_connective OPAREN thf_logic_formula • CPAREN\l"]
  187 -> 198 [style=solid label="CPAREN"]
  188 [label="State 188\n\l 12 thf_annotated: THF OPAREN NUMBER COMMA type COMMA thf_formula CPAREN DOT •\l"]
  188 -> "188R12" [style=solid]
 "188R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l 97 thf_formula_list: thf_logic_formula COMMA thf_formula_list •\l"]
  189 -> "189R97" [style=solid]
 "189R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l 70 thf_let: LET OPAREN thf_unitary_formula COMMA • thf_formula CPAREN\l"]
  190 -> 38 [style=solid label="OPAREN"]
  190 -> 39 [style=solid label="OBRA"]
  190 -> 40 [style=solid label="OKEY"]
  190 -> 41 [style=solid label="EQUAL_COMB"]
  190 -> 42 [style=solid label="DESCRIPTION_COMB"]
  190 -> 43 [style=solid label="CHOICE_COMB"]
  190 -> 44 [style=solid label="EXISTS_COMB"]
  190 -> 45 [style=solid label="FORALL_COMB"]
  190 -> 46 [style=solid label="DESCRIPTION"]
  190 -> 47 [style=solid label="CHOICE"]
  190 -> 48 [style=solid label="LAMBDA"]
  190 -> 49 [style=solid label="EXISTS"]
  190 -> 50 [style=solid label="FORALL"]
  190 -> 51 [style=solid label="VLINE"]
  190 -> 52 [style=solid label="AND"]
  190 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  190 -> 54 [style=solid label="ASSIGNMENT"]
  190 -> 55 [style=solid label="IMPLIES"]
  190 -> 56 [style=solid label="IFF"]
  190 -> 57 [style=solid label="INFIX_EQUALITY"]
  190 -> 58 [style=solid label="INFIX_INEQUALITY"]
  190 -> 59 [style=solid label="NIFF"]
  190 -> 60 [style=solid label="NOR"]
  190 -> 61 [style=solid label="NAND"]
  190 -> 62 [style=solid label="TYPED_EXISTS"]
  190 -> 63 [style=solid label="TYPED_FORALL"]
  190 -> 64 [style=solid label="LET"]
  190 -> 65 [style=solid label="DOLLAR_COND"]
  190 -> 66 [style=solid label="VAR"]
  190 -> 67 [style=solid label="DOLLAR_WORD"]
  190 -> 68 [style=solid label="FUNCTOR"]
  190 -> 69 [style=solid label="DISTINCT_OBJECT"]
  190 -> 70 [style=solid label="NUMBER"]
  190 -> 199 [style=dashed label="thf_formula"]
  190 -> 72 [style=dashed label="thf_logic_formula"]
  190 -> 73 [style=dashed label="thf_binary_formula"]
  190 -> 74 [style=dashed label="thf_binary_pair"]
  190 -> 75 [style=dashed label="thf_binary_tuple"]
  190 -> 76 [style=dashed label="thf_or_formula"]
  190 -> 77 [style=dashed label="thf_and_formula"]
  190 -> 78 [style=dashed label="thf_apply_formula"]
  190 -> 79 [style=dashed label="thf_unitary_formula"]
  190 -> 80 [style=dashed label="thf_quantified_formula"]
  190 -> 81 [style=dashed label="thf_quantification"]
  190 -> 82 [style=dashed label="thf_unary_formula"]
  190 -> 83 [style=dashed label="thf_atom"]
  190 -> 84 [style=dashed label="thf_function"]
  190 -> 85 [style=dashed label="thf_conn_term"]
  190 -> 86 [style=dashed label="thf_conditional"]
  190 -> 87 [style=dashed label="thf_let"]
  190 -> 88 [style=dashed label="thf_type_formula"]
  190 -> 89 [style=dashed label="thf_typeable_formula"]
  190 -> 90 [style=dashed label="thf_subtype"]
  190 -> 91 [style=dashed label="thf_unitary_type"]
  190 -> 92 [style=dashed label="thf_binary_type"]
  190 -> 93 [style=dashed label="thf_mapping_type"]
  190 -> 94 [style=dashed label="thf_xprod_type"]
  190 -> 95 [style=dashed label="thf_union_type"]
  190 -> 96 [style=dashed label="thf_sequent"]
  190 -> 97 [style=dashed label="thf_tuple"]
  190 -> 98 [style=dashed label="thf_quantifier"]
  190 -> 99 [style=dashed label="fof_quantifier"]
  190 -> 100 [style=dashed label="th0_quantifier"]
  190 -> 101 [style=dashed label="th1_quantifier"]
  190 -> 102 [style=dashed label="thf_pair_connective"]
  190 -> 103 [style=dashed label="thf_unary_connective"]
  190 -> 104 [style=dashed label="th1_unary_connective"]
  190 -> 105 [style=dashed label="atom"]
  190 -> 106 [style=dashed label="untyped_atom"]
  190 -> 107 [style=dashed label="constant"]
  190 -> 108 [style=dashed label="defined_term"]
  190 -> 109 [style=dashed label="binary_connective"]
  190 -> 110 [style=dashed label="assoc_connective"]
  191 [label="State 191\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula COMMA • thf_logic_formula COMMA thf_logic_formula CPAREN\l"]
  191 -> 114 [style=solid label="OPAREN"]
  191 -> 39 [style=solid label="OBRA"]
  191 -> 40 [style=solid label="OKEY"]
  191 -> 41 [style=solid label="EQUAL_COMB"]
  191 -> 42 [style=solid label="DESCRIPTION_COMB"]
  191 -> 43 [style=solid label="CHOICE_COMB"]
  191 -> 44 [style=solid label="EXISTS_COMB"]
  191 -> 45 [style=solid label="FORALL_COMB"]
  191 -> 46 [style=solid label="DESCRIPTION"]
  191 -> 47 [style=solid label="CHOICE"]
  191 -> 48 [style=solid label="LAMBDA"]
  191 -> 49 [style=solid label="EXISTS"]
  191 -> 50 [style=solid label="FORALL"]
  191 -> 51 [style=solid label="VLINE"]
  191 -> 52 [style=solid label="AND"]
  191 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  191 -> 54 [style=solid label="ASSIGNMENT"]
  191 -> 55 [style=solid label="IMPLIES"]
  191 -> 56 [style=solid label="IFF"]
  191 -> 57 [style=solid label="INFIX_EQUALITY"]
  191 -> 58 [style=solid label="INFIX_INEQUALITY"]
  191 -> 59 [style=solid label="NIFF"]
  191 -> 60 [style=solid label="NOR"]
  191 -> 61 [style=solid label="NAND"]
  191 -> 62 [style=solid label="TYPED_EXISTS"]
  191 -> 63 [style=solid label="TYPED_FORALL"]
  191 -> 64 [style=solid label="LET"]
  191 -> 65 [style=solid label="DOLLAR_COND"]
  191 -> 66 [style=solid label="VAR"]
  191 -> 67 [style=solid label="DOLLAR_WORD"]
  191 -> 68 [style=solid label="FUNCTOR"]
  191 -> 69 [style=solid label="DISTINCT_OBJECT"]
  191 -> 70 [style=solid label="NUMBER"]
  191 -> 200 [style=dashed label="thf_logic_formula"]
  191 -> 73 [style=dashed label="thf_binary_formula"]
  191 -> 74 [style=dashed label="thf_binary_pair"]
  191 -> 75 [style=dashed label="thf_binary_tuple"]
  191 -> 76 [style=dashed label="thf_or_formula"]
  191 -> 77 [style=dashed label="thf_and_formula"]
  191 -> 78 [style=dashed label="thf_apply_formula"]
  191 -> 79 [style=dashed label="thf_unitary_formula"]
  191 -> 80 [style=dashed label="thf_quantified_formula"]
  191 -> 81 [style=dashed label="thf_quantification"]
  191 -> 82 [style=dashed label="thf_unary_formula"]
  191 -> 83 [style=dashed label="thf_atom"]
  191 -> 84 [style=dashed label="thf_function"]
  191 -> 85 [style=dashed label="thf_conn_term"]
  191 -> 86 [style=dashed label="thf_conditional"]
  191 -> 87 [style=dashed label="thf_let"]
  191 -> 88 [style=dashed label="thf_type_formula"]
  191 -> 89 [style=dashed label="thf_typeable_formula"]
  191 -> 90 [style=dashed label="thf_subtype"]
  191 -> 91 [style=dashed label="thf_unitary_type"]
  191 -> 92 [style=dashed label="thf_binary_type"]
  191 -> 93 [style=dashed label="thf_mapping_type"]
  191 -> 94 [style=dashed label="thf_xprod_type"]
  191 -> 95 [style=dashed label="thf_union_type"]
  191 -> 117 [style=dashed label="thf_tuple"]
  191 -> 98 [style=dashed label="thf_quantifier"]
  191 -> 99 [style=dashed label="fof_quantifier"]
  191 -> 100 [style=dashed label="th0_quantifier"]
  191 -> 101 [style=dashed label="th1_quantifier"]
  191 -> 102 [style=dashed label="thf_pair_connective"]
  191 -> 103 [style=dashed label="thf_unary_connective"]
  191 -> 104 [style=dashed label="th1_unary_connective"]
  191 -> 105 [style=dashed label="atom"]
  191 -> 106 [style=dashed label="untyped_atom"]
  191 -> 107 [style=dashed label="constant"]
  191 -> 108 [style=dashed label="defined_term"]
  191 -> 109 [style=dashed label="binary_connective"]
  191 -> 110 [style=dashed label="assoc_connective"]
  192 [label="State 192\n\l 65 thf_function: DOLLAR_WORD OPAREN thf_arguments CPAREN •\l"]
  192 -> "192R65" [style=solid]
 "192R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l 64 thf_function: FUNCTOR OPAREN thf_arguments CPAREN •\l"]
  193 -> "193R64" [style=solid]
 "193R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l 49 thf_unitary_formula: OPAREN thf_logic_formula CPAREN •\l"]
  194 -> "194R49" [style=solid]
 "194R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l 56 thf_typed_variable: VAR DDOT • thf_top_level_type\l"]
  195 -> 133 [style=solid label="OPAREN"]
  195 -> 39 [style=solid label="OBRA"]
  195 -> 40 [style=solid label="OKEY"]
  195 -> 41 [style=solid label="EQUAL_COMB"]
  195 -> 42 [style=solid label="DESCRIPTION_COMB"]
  195 -> 43 [style=solid label="CHOICE_COMB"]
  195 -> 44 [style=solid label="EXISTS_COMB"]
  195 -> 45 [style=solid label="FORALL_COMB"]
  195 -> 46 [style=solid label="DESCRIPTION"]
  195 -> 47 [style=solid label="CHOICE"]
  195 -> 48 [style=solid label="LAMBDA"]
  195 -> 49 [style=solid label="EXISTS"]
  195 -> 50 [style=solid label="FORALL"]
  195 -> 51 [style=solid label="VLINE"]
  195 -> 52 [style=solid label="AND"]
  195 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  195 -> 54 [style=solid label="ASSIGNMENT"]
  195 -> 55 [style=solid label="IMPLIES"]
  195 -> 56 [style=solid label="IFF"]
  195 -> 57 [style=solid label="INFIX_EQUALITY"]
  195 -> 58 [style=solid label="INFIX_INEQUALITY"]
  195 -> 59 [style=solid label="NIFF"]
  195 -> 60 [style=solid label="NOR"]
  195 -> 61 [style=solid label="NAND"]
  195 -> 62 [style=solid label="TYPED_EXISTS"]
  195 -> 63 [style=solid label="TYPED_FORALL"]
  195 -> 64 [style=solid label="LET"]
  195 -> 65 [style=solid label="DOLLAR_COND"]
  195 -> 66 [style=solid label="VAR"]
  195 -> 67 [style=solid label="DOLLAR_WORD"]
  195 -> 68 [style=solid label="FUNCTOR"]
  195 -> 69 [style=solid label="DISTINCT_OBJECT"]
  195 -> 70 [style=solid label="NUMBER"]
  195 -> 169 [style=dashed label="thf_apply_formula"]
  195 -> 170 [style=dashed label="thf_unitary_formula"]
  195 -> 80 [style=dashed label="thf_quantified_formula"]
  195 -> 81 [style=dashed label="thf_quantification"]
  195 -> 82 [style=dashed label="thf_unary_formula"]
  195 -> 135 [style=dashed label="thf_atom"]
  195 -> 84 [style=dashed label="thf_function"]
  195 -> 85 [style=dashed label="thf_conn_term"]
  195 -> 86 [style=dashed label="thf_conditional"]
  195 -> 87 [style=dashed label="thf_let"]
  195 -> 201 [style=dashed label="thf_top_level_type"]
  195 -> 172 [style=dashed label="thf_unitary_type"]
  195 -> 173 [style=dashed label="thf_apply_type"]
  195 -> 174 [style=dashed label="thf_mapping_type"]
  195 -> 117 [style=dashed label="thf_tuple"]
  195 -> 98 [style=dashed label="thf_quantifier"]
  195 -> 99 [style=dashed label="fof_quantifier"]
  195 -> 100 [style=dashed label="th0_quantifier"]
  195 -> 101 [style=dashed label="th1_quantifier"]
  195 -> 102 [style=dashed label="thf_pair_connective"]
  195 -> 103 [style=dashed label="thf_unary_connective"]
  195 -> 104 [style=dashed label="th1_unary_connective"]
  195 -> 105 [style=dashed label="atom"]
  195 -> 106 [style=dashed label="untyped_atom"]
  195 -> 107 [style=dashed label="constant"]
  195 -> 108 [style=dashed label="defined_term"]
  195 -> 109 [style=dashed label="binary_connective"]
  195 -> 110 [style=dashed label="assoc_connective"]
  196 [label="State 196\n\l 51 thf_quantification: thf_quantifier OBRA thf_variable_list CBRA • DDOT\l"]
  196 -> 202 [style=solid label="DDOT"]
  197 [label="State 197\n\l 52 thf_variable_list: thf_variable COMMA • thf_variable_list\l"]
  197 -> 183 [style=solid label="VAR"]
  197 -> 203 [style=dashed label="thf_variable_list"]
  197 -> 185 [style=dashed label="thf_variable"]
  197 -> 186 [style=dashed label="thf_typed_variable"]
  198 [label="State 198\n\l 57 thf_unary_formula: thf_unary_connective OPAREN thf_logic_formula CPAREN •\l"]
  198 -> "198R57" [style=solid]
 "198R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l 70 thf_let: LET OPAREN thf_unitary_formula COMMA thf_formula • CPAREN\l"]
  199 -> 204 [style=solid label="CPAREN"]
  200 [label="State 200\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula COMMA thf_logic_formula • COMMA thf_logic_formula CPAREN\l"]
  200 -> 205 [style=solid label="COMMA"]
  201 [label="State 201\n\l 56 thf_typed_variable: VAR DDOT thf_top_level_type •\l"]
  201 -> "201R56" [style=solid]
 "201R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l 51 thf_quantification: thf_quantifier OBRA thf_variable_list CBRA DDOT •\l"]
  202 -> "202R51" [style=solid]
 "202R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l 52 thf_variable_list: thf_variable COMMA thf_variable_list •\l"]
  203 -> "203R52" [style=solid]
 "203R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l 70 thf_let: LET OPAREN thf_unitary_formula COMMA thf_formula CPAREN •\l"]
  204 -> "204R70" [style=solid]
 "204R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula COMMA thf_logic_formula COMMA • thf_logic_formula CPAREN\l"]
  205 -> 114 [style=solid label="OPAREN"]
  205 -> 39 [style=solid label="OBRA"]
  205 -> 40 [style=solid label="OKEY"]
  205 -> 41 [style=solid label="EQUAL_COMB"]
  205 -> 42 [style=solid label="DESCRIPTION_COMB"]
  205 -> 43 [style=solid label="CHOICE_COMB"]
  205 -> 44 [style=solid label="EXISTS_COMB"]
  205 -> 45 [style=solid label="FORALL_COMB"]
  205 -> 46 [style=solid label="DESCRIPTION"]
  205 -> 47 [style=solid label="CHOICE"]
  205 -> 48 [style=solid label="LAMBDA"]
  205 -> 49 [style=solid label="EXISTS"]
  205 -> 50 [style=solid label="FORALL"]
  205 -> 51 [style=solid label="VLINE"]
  205 -> 52 [style=solid label="AND"]
  205 -> 53 [style=solid label="UNARY_CONNECTIVE"]
  205 -> 54 [style=solid label="ASSIGNMENT"]
  205 -> 55 [style=solid label="IMPLIES"]
  205 -> 56 [style=solid label="IFF"]
  205 -> 57 [style=solid label="INFIX_EQUALITY"]
  205 -> 58 [style=solid label="INFIX_INEQUALITY"]
  205 -> 59 [style=solid label="NIFF"]
  205 -> 60 [style=solid label="NOR"]
  205 -> 61 [style=solid label="NAND"]
  205 -> 62 [style=solid label="TYPED_EXISTS"]
  205 -> 63 [style=solid label="TYPED_FORALL"]
  205 -> 64 [style=solid label="LET"]
  205 -> 65 [style=solid label="DOLLAR_COND"]
  205 -> 66 [style=solid label="VAR"]
  205 -> 67 [style=solid label="DOLLAR_WORD"]
  205 -> 68 [style=solid label="FUNCTOR"]
  205 -> 69 [style=solid label="DISTINCT_OBJECT"]
  205 -> 70 [style=solid label="NUMBER"]
  205 -> 206 [style=dashed label="thf_logic_formula"]
  205 -> 73 [style=dashed label="thf_binary_formula"]
  205 -> 74 [style=dashed label="thf_binary_pair"]
  205 -> 75 [style=dashed label="thf_binary_tuple"]
  205 -> 76 [style=dashed label="thf_or_formula"]
  205 -> 77 [style=dashed label="thf_and_formula"]
  205 -> 78 [style=dashed label="thf_apply_formula"]
  205 -> 79 [style=dashed label="thf_unitary_formula"]
  205 -> 80 [style=dashed label="thf_quantified_formula"]
  205 -> 81 [style=dashed label="thf_quantification"]
  205 -> 82 [style=dashed label="thf_unary_formula"]
  205 -> 83 [style=dashed label="thf_atom"]
  205 -> 84 [style=dashed label="thf_function"]
  205 -> 85 [style=dashed label="thf_conn_term"]
  205 -> 86 [style=dashed label="thf_conditional"]
  205 -> 87 [style=dashed label="thf_let"]
  205 -> 88 [style=dashed label="thf_type_formula"]
  205 -> 89 [style=dashed label="thf_typeable_formula"]
  205 -> 90 [style=dashed label="thf_subtype"]
  205 -> 91 [style=dashed label="thf_unitary_type"]
  205 -> 92 [style=dashed label="thf_binary_type"]
  205 -> 93 [style=dashed label="thf_mapping_type"]
  205 -> 94 [style=dashed label="thf_xprod_type"]
  205 -> 95 [style=dashed label="thf_union_type"]
  205 -> 117 [style=dashed label="thf_tuple"]
  205 -> 98 [style=dashed label="thf_quantifier"]
  205 -> 99 [style=dashed label="fof_quantifier"]
  205 -> 100 [style=dashed label="th0_quantifier"]
  205 -> 101 [style=dashed label="th1_quantifier"]
  205 -> 102 [style=dashed label="thf_pair_connective"]
  205 -> 103 [style=dashed label="thf_unary_connective"]
  205 -> 104 [style=dashed label="th1_unary_connective"]
  205 -> 105 [style=dashed label="atom"]
  205 -> 106 [style=dashed label="untyped_atom"]
  205 -> 107 [style=dashed label="constant"]
  205 -> 108 [style=dashed label="defined_term"]
  205 -> 109 [style=dashed label="binary_connective"]
  205 -> 110 [style=dashed label="assoc_connective"]
  206 [label="State 206\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula COMMA thf_logic_formula COMMA thf_logic_formula • CPAREN\l"]
  206 -> 207 [style=solid label="CPAREN"]
  207 [label="State 207\n\l 69 thf_conditional: DOLLAR_COND OPAREN thf_logic_formula COMMA thf_logic_formula COMMA thf_logic_formula CPAREN •\l"]
  207 -> "207R69" [style=solid]
 "207R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
}
